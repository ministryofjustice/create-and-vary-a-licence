---
generic-service:
  nameOverride: create-and-vary-a-licence
  replicaCount: 4

  image:
    repository: quay.io/hmpps/create-and-vary-a-licence
    tag: app_version    # override at deployment time
    port: 3000

  ingress:
    enabled: true
    host: app-hostname.local    # override per environment
    tlsSecretName: create-and-vary-a-licence-cert
    path: /

  livenessProbe:
    httpGet:
      path: /ping

  readinessProbe:
    httpGet:
      path: /ping

  # Environment variables to load into the deployment
  env:
    NODE_ENV: "production"
    REDIS_TLS_ENABLED: "true"
    TOKEN_VERIFICATION_ENABLED: "true"

  # Pre-existing kubernetes secrets to load as environment variables in the deployment.
  # namespace_secrets:
  #   [name of kubernetes secret]:
  #     [name of environment variable as seen by app]: [key of kubernetes secret to load]

  namespace_secrets:
    create-and-vary-a-licence:
      APPINSIGHTS_INSTRUMENTATIONKEY: "APPINSIGHTS_INSTRUMENTATIONKEY"
      API_CLIENT_ID: "API_CLIENT_ID"
      API_CLIENT_SECRET: "API_CLIENT_SECRET"
      SYSTEM_CLIENT_ID: "SYSTEM_CLIENT_ID"
      SYSTEM_CLIENT_SECRET: "SYSTEM_CLIENT_SECRET"
      SESSION_SECRET: "SESSION_SECRET"
    elasticache-redis:
      REDIS_HOST: "primary_endpoint_address"
      REDIS_AUTH_TOKEN: "auth_token"

  allowlist:
    office: "217.33.148.210/32"
    health-kick: "35.177.252.195/32"
    mojvpn: "81.134.202.29/32"
    cloudplatform-live1-1: "35.178.209.113/32"
    cloudplatform-live1-2: "3.8.51.207/32"
    cloudplatform-live1-3: "35.177.252.54/32"

gotenberg:
  nameOverride: gotenberg
  replicaCount: 2

  image:
    repository: thecodingmachine/gotenberg
    tag: 6.3.0
    port: 3000

  ingress:
    enabled: false

  livenessProbe:
    httpGet:
      path: /ping
    periodSeconds: 30
    initialDelaySeconds: 60
    timeoutSeconds: 20
    failureThreshold: 10

  readinessProbe:
    httpGet:
      path: /ping
    periodSeconds: 20
    initialDelaySeconds: 60
    timeoutSeconds: 30
    failureThreshold: 15

  podSecurityContext:
    fsGroup: 1001

  securityContext:
    runAsUser: 1001
    runAsNonRoot: true

delius-wiremock:
  nameOverride: delius-wiremock
  replicaCount: 2

  image:
    repository: smcveigh941/delius-wiremock
    tag: latest
    pullPolicy: Always
    port: 5000

  namespace_secrets:
    create-and-vary-a-licence:
      SYSTEM_CLIENT_ID: "SYSTEM_CLIENT_ID"
      SYSTEM_CLIENT_SECRET: "SYSTEM_CLIENT_SECRET"

  ingress:
    enabled: false

  livenessProbe:
    httpGet:
      path: /actuator/health/liveness
    periodSeconds: 30
    initialDelaySeconds: 60
    timeoutSeconds: 20
    failureThreshold: 10

  readinessProbe:
    httpGet:
      path: /actuator/health/readiness
    periodSeconds: 20
    initialDelaySeconds: 60
    timeoutSeconds: 30
    failureThreshold: 15

  podSecurityContext:
    fsGroup: 1001

  securityContext:
    runAsUser: 1001
    runAsNonRoot: true

generic-prometheus-alerts:
  targetApplication: create-and-vary-a-licence
