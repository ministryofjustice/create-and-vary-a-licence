version: '3.1'
services:

  redis:
    image: 'redis:5.0'
    networks:
      - hmpps
    container_name: redis 
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'

  hmpps-community-api-wiremock:
    image: quay.io/hmpps/hmpps-community-api-wiremock:latest
    networks:
      - hmpps
    container_name: hmpps-community-api-wiremock
    env_file:
      - ./.env
    ports:
      - "5000:5000"
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:5000/actuator/health' ]

  gotenberg:
    image: thecodingmachine/gotenberg:7.5.0
    networks:
      - hmpps
    container_name: gotenberg
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "3001:3000"
    environment:
      - GOOGLE_CHROME_IGNORE_CERTIFICATE_ERRORS=1
      - DISABLE_UNOCONV=1
      - DEFAULT_WAIT_TIMEOUT=30
    restart: always
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:3000/health' ]

  localstack:
    image: localstack/localstack:0.11.2
    networks:
      - hmpps
    container_name: localstack
    ports:
      - "4566-4597:4566-4597"
      - 8999:8080
    environment:
      - SERVICES=${SERVICES-sqs}
      - DEBUG=${DEBUG- }
      - DATA_DIR=${DATA_DIR- }
      - PORT_WEB_UI=${PORT_WEB_UI-8088}
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR- }
      - AWS_EXECUTION_ENV=True
      - DEFAULT_REGION=eu-west-2
      - HOSTNAME_EXTERNAL=${HOSTNAME_EXTERNAL-localstack}
    volumes:
      - './.localstack:/tmp/localstack'
      - $PWD/localstack:/docker-entrypoint-initaws.d

  # Optional - only when running API locally
  licences-db:
    image: postgres
    networks:
      - hmpps
    container_name: licences-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=create-and-vary-a-licence
      - POSTGRES_USER=create-and-vary-a-licence
      - POSTGRES_DB=create-and-vary-a-licence-db
networks:
  hmpps:
