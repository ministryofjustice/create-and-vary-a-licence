import Page from '../pages/page'
import IndexPage from '../pages'
import VaryApprovalSearchPage from '../pages/varyApproveSearchPage'

context('ACO search a licence variation', () => {
  beforeEach(() => {
    cy.task('reset')
    cy.task('stubProbationAcoSignIn')
    cy.task('stubGetStaffDetails')
    cy.task('stubGetVaryApproverCaseload')
    cy.task('stubGetCompletedLicence', { statusCode: 'VARIATION_SUBMITTED', typeCode: 'AP' })
    cy.task('stubRecordAuditEvent')
    cy.task('stubMatchLicenceEvents')
    cy.task('stubGetLicencePolicyConditions')
    cy.task('stubGetActivePolicyConditions')
    cy.task('stubFeComponents')
    cy.signIn()
  })

  it('should click through search journey', () => {
    cy.task('stubGetVaryApproverSearchResults')
    const indexPage = Page.verifyOnPage(IndexPage)
    const varyApproveCasesPage = indexPage.clickApproveAVariation()
    varyApproveCasesPage.clickSearch('test')
    let searchPage = Page.verifyOnPage(VaryApprovalSearchPage)
    searchPage.getSearchHeading().contains('Search results for test')
    searchPage.getPduCasesTabTitle().contains('Cases in this PDU (3 results)')
    searchPage.clickOnRegionCasesTab()
    searchPage.getRegionCasesTabTitle().contains('All cases in this region (4 results)')
    searchPage.clickOnPduCasesTab()
    const comPage = searchPage.clickFirstComName()
    searchPage = comPage.clickBackToVaryApproverSearch()
    const viewAVariationPage = searchPage.clickOffenderName()
    searchPage = viewAVariationPage.clickBackToVaryApproverSearch()
    const viewCasesPageExit = searchPage.clickBackToCaseload()
    viewCasesPageExit.signOut().click()
  })

  it('should order cases by ascending variation request date', () => {
    cy.task('stubGetVaryApproverSearchResults')
    const indexPage = Page.verifyOnPage(IndexPage)
    const varyApproveCasesPage = indexPage.clickApproveAVariation()
    const searchPage = varyApproveCasesPage.clickSearch('test')
    searchPage.getSearchHeading().contains('Search results for test')
    searchPage.getVariationRequestDate(0).contains('1 May 2024')
    searchPage.getVariationRequestDate(1).contains('2 May 2024')
    searchPage.getVariationRequestDate(2).contains('3 Jun 2024')
    searchPage.clickOnRegionCasesTab()
    searchPage.getVariationRequestDate(3).contains('30 Apr 2024')
    searchPage.getVariationRequestDate(4).contains('1 May 2024')
    searchPage.getVariationRequestDate(5).contains('2 May 2024')
    searchPage.getVariationRequestDate(6).contains('3 Jun 2024')
  })

  it('should not convert case of search result text when different to that of user input', () => {
    cy.task('stubGetVaryApproverSearchResults')
    const indexPage = Page.verifyOnPage(IndexPage)
    const varyApproveCasesPage = indexPage.clickApproveAVariation()
    varyApproveCasesPage.clickSearch('tEsT')
    const searchPage = Page.verifyOnPage(VaryApprovalSearchPage)
    searchPage.getSearchHeading().contains('Search results for tEsT')
    searchPage.getOffenderName().contains('Test')
    searchPage.getOffenderName().should('not.have.value', 'tEsT')
  })
})
