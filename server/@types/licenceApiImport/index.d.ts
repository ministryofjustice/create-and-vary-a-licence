/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    ErrorResponse: {
      /** Format: int32 */
      status: number
      /** Format: int32 */
      errorCode?: number
      userMessage?: string
      developerMessage?: string
      moreInfo?: string
    }
    RetryDlqResult: {
      /** Format: int32 */
      messagesFoundCount: number
    }
    PurgeQueueResult: {
      /** Format: int32 */
      messagesFoundCount: number
    }
    /** @description Request object for updating a prison case administrator */
    UpdatePrisonUserRequest: {
      /**
       * @description The NOMIS username of the case administrator
       * @example jbloggs
       */
      staffUsername: string
      /**
       * @description The email address of the case administrator
       * @example jbloggs@probation.gov.uk
       */
      staffEmail?: string
      /**
       * @description The first name of the case administrator
       * @example Joseph
       */
      firstName?: string
      /**
       * @description The last name of the case administrator
       * @example Bloggs
       */
      lastName?: string
    }
    /** @description Request object for updating / creating OMU email contact */
    UpdateOmuEmailRequest: {
      /**
       * @description The email used to contact the OMU
       * @example test@omu.prison.com
       */
      email: string
    }
    OmuContact: {
      /** Format: int64 */
      id: number
      prisonCode: string
      email: string
      /** Format: date-time */
      dateCreated: string
      /** Format: date-time */
      dateLastUpdated?: string
    }
    /** @description Request object for updating an offender's personal details */
    UpdateOffenderDetailsRequest: {
      /**
       * @description The offender forename
       * @example Steven
       */
      forename: string
      /**
       * @description The offender middle names
       * @example Jason Kyle
       */
      middleNames?: string
      /**
       * @description The offender surname
       * @example Smith
       */
      surname: string
      /**
       * Format: date
       * @description The offender's date of birth, from either prison or probation services
       * @example 12/12/2001
       */
      dateOfBirth: string
    }
    /** @description Request object for updating the COM responsible for an offender */
    UpdateComRequest: {
      /**
       * Format: int64
       * @description The unique identifier of the COM, retrieved from Delius
       * @example 22003829
       */
      staffIdentifier: number
      /**
       * @description The Delius username for the COM
       * @example jbloggs
       */
      staffUsername: string
      /**
       * @description The email address of the COM
       * @example jbloggs@probation.gov.uk
       */
      staffEmail?: string
      /**
       * @description The first name of the COM
       * @example Joseph
       */
      firstName?: string
      /**
       * @description The last name of the COM
       * @example Bloggs
       */
      lastName?: string
    }
    /** @description Request object for updating an offender's probation team */
    UpdateProbationTeamRequest: {
      /**
       * @description The probation area code supervising this licence
       * @example N01
       */
      probationAreaCode: string
      /**
       * @description The probation area description
       * @example Wales
       */
      probationAreaDescription?: string
      /**
       * @description The probation delivery unit (PDU or borough) code
       * @example NA01A12
       */
      probationPduCode?: string
      /**
       * @description The PDU description
       * @example Cardiff
       */
      probationPduDescription?: string
      /**
       * @description The local administrative unit (LAU or district) code
       * @example NA01A12
       */
      probationLauCode?: string
      /**
       * @description The LAU description
       * @example Cardiff North
       */
      probationLauDescription?: string
      /**
       * @description The probation team code supervising this licence
       * @example NA01A12-A
       */
      probationTeamCode?: string
      /**
       * @description The team description
       * @example Cardiff North A
       */
      probationTeamDescription?: string
    }
    /** @description Request object for updating the VLO discussion */
    UpdateVloDiscussionRequest: {
      /**
       * @description Whether or not the licence variation has been discussed with a VLO
       * @example Yes
       */
      vloDiscussion: string
    }
    /** @description Request object for creating a new licence */
    NotifyRequest: {
      /**
       * @description The name of the person to contact
       * @example Joe Bloggs
       */
      name?: string
      /**
       * @description The email address to send the notification to
       * @example joebloggs@probation.gov.uk
       */
      email?: string
    }
    /** @description Request object for updating the status of a licence */
    StatusUpdateRequest: {
      /**
       * @description The new status for this licence
       * @example APPROVED
       * @enum {string}
       */
      status:
        | 'IN_PROGRESS'
        | 'SUBMITTED'
        | 'APPROVED'
        | 'ACTIVE'
        | 'REJECTED'
        | 'INACTIVE'
        | 'RECALLED'
        | 'VARIATION_IN_PROGRESS'
        | 'VARIATION_SUBMITTED'
        | 'VARIATION_REJECTED'
        | 'VARIATION_APPROVED'
        | 'NOT_STARTED'
        | 'TIMED_OUT'
      /**
       * @description The username of the person who is updating this status
       * @example X12333
       */
      username: string
      /**
       * @description The full name of the person who is updating this status
       * @example John Smythe
       */
      fullName?: string
    }
    /** @description Describes a standard condition on this licence */
    StandardCondition: {
      /**
       * Format: int64
       * @description The internal ID for this standard condition on this licence
       * @example 98987
       */
      id: number
      /**
       * @description The unique code for this standard condition
       * @example 9ce9d594-e346-4785-9642-c87e764bee37
       */
      code: string
      /**
       * Format: int32
       * @description The sequence of this standard condition
       * @example 1
       */
      sequence: number
      /**
       * @description The text of this standard condition
       * @example Be of generally good behaviour
       */
      text: string
    }
    UpdateStandardConditionDataRequest: {
      /** @description The list of standard licence conditions from service configuration */
      standardLicenceConditions: components['schemas']['StandardCondition'][]
      /** @description The list of standard post sentence supervision conditions from service configuration */
      standardPssConditions: components['schemas']['StandardCondition'][]
    }
    /** @description Request object for updating the SPO discussion */
    UpdateSpoDiscussionRequest: {
      /**
       * @description Whether or not the licence variation has been discussed with an SPO
       * @example Yes
       */
      spoDiscussion: string
    }
    /** @description Request object for referring a licence variation */
    ReferVariationRequest: {
      /** @description A large string containing rich text markup. A reason for referring the licence variation. */
      reasonForReferral: string
    }
    /** @description Request object for updating the reason for variation */
    UpdateReasonForVariationRequest: {
      /** @description A large string containing rich text markup. A reason for varying the licence. */
      reasonForVariation: string
    }
    /** @description Request object for updating the prison information on a licence */
    UpdatePrisonInformationRequest: {
      /**
       * @description The identifier of the prison
       * @example PVI
       */
      prisonCode: string
      /**
       * @description The detailed name of the prison
       * @example Pentonville (HMP)
       */
      prisonDescription: string
      /**
       * @description The prison telephone number
       * @example +44 276 54545
       */
      prisonTelephone?: string
    }
    /** @description Request object for overriding licence dates */
    OverrideLicenceDatesRequest: {
      /**
       * Format: date
       * @description The conditional release date
       * @example 18/06/2022
       */
      conditionalReleaseDate?: string
      /**
       * Format: date
       * @description The actual release date
       * @example 18/07/2022
       */
      actualReleaseDate?: string
      /**
       * Format: date
       * @description The sentence start date
       * @example 06/05/2019
       */
      sentenceStartDate?: string
      /**
       * Format: date
       * @description The sentence end date
       * @example 06/05/2023
       */
      sentenceEndDate?: string
      /**
       * Format: date
       * @description The licence start date
       * @example 06/05/2021
       */
      licenceStartDate?: string
      /**
       * Format: date
       * @description The licence expiry date
       * @example 06/05/2023
       */
      licenceExpiryDate?: string
      /**
       * Format: date
       * @description The date when the post sentence supervision period starts
       * @example 06/05/2023
       */
      topupSupervisionStartDate?: string
      /**
       * Format: date
       * @description The date when the post sentence supervision period ends
       * @example 06/06/2023
       */
      topupSupervisionExpiryDate?: string
      /**
       * Format: date
       * @description The release date after being recalled
       * @example 06/06/2023
       */
      postRecallReleaseDate?: string
      /**
       * Format: date
       * @description The person's actual home detention curfew date
       * @example 06/06/2023
       */
      homeDetentionCurfewActualDate?: string
      /**
       * Format: date
       * @description The person's home detention curfew end date
       * @example 06/06/2023
       */
      homeDetentionCurfewEndDate?: string
      /** @description Reason for overriding the licence dates */
      reason: string
    }
    /** @description Describes the curfew times on this hdc licence */
    HdcCurfewTimes: {
      /**
       * Format: int64
       * @description The internal ID for these curfew times on this hdc licence
       * @example 98987
       */
      id?: number
      /**
       * Format: int32
       * @description Sequence of this curfew time within the curfew times
       * @example 1
       */
      curfewTimesSequence?: number
      /**
       * @description The day on which this curfew starts for this curfew time
       * @example MONDAY
       * @enum {string}
       */
      fromDay?: 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'
      /**
       * Format: HH:mm
       * @description The time at which this curfew starts on the fromDay
       * @example 01:00:00
       */
      fromTime?: string
      /**
       * @description The day on which this curfew ends for this curfew time
       * @example MONDAY
       * @enum {string}
       */
      untilDay?: 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'
      /**
       * Format: HH:mm
       * @description The time at which this curfew ends on the untilDay
       * @example 01:00:00
       */
      untilTime?: string
    }
    UpdateCurfewTimesRequest: {
      /** @description The list of hdc licence curfew times from service configuration */
      curfewTimes: components['schemas']['HdcCurfewTimes'][]
    }
    /** @description Request object for updating the contact number of the officer on a licence */
    ContactNumberRequest: {
      /**
       * @description The UK telephone number to contact the person the offender should meet for their initial meeting
       * @example 0114 2557665
       */
      telephone: string
    }
    /** @description A list of bespoke conditions to add to a licence */
    BespokeConditionRequest: {
      /**
       * @description A list of bespoke conditions to add to a licence
       * @example ['cond1', 'cond2']
       */
      conditions: string[]
    }
    /** @description Request object for updating the date and time of the initial appointment */
    AppointmentTimeRequest: {
      /**
       * Format: date-time
       * @description The date and time of the initial appointment
       * @example 12/12/2021 10:35
       */
      appointmentTime?: string
      /**
       * @description The type of appointment time at the initial appointment
       * @example IMMEDIATE_UPON_RELEASE
       * @enum {string}
       */
      appointmentTimeType: 'IMMEDIATE_UPON_RELEASE' | 'NEXT_WORKING_DAY_2PM' | 'SPECIFIC_DATE_TIME'
    }
    /** @description Request object for updating the person the person on probation will meet at the initial appointment */
    AppointmentPersonRequest: {
      /**
       * @description The type of appointment with for the initial appointment
       * @example SPECIFIC_PERSON
       * @enum {string}
       */
      appointmentPersonType: 'DUTY_OFFICER' | 'RESPONSIBLE_COM' | 'SPECIFIC_PERSON'
      /**
       * @description The name of the person the person on probation will meet at the initial appointment
       * @example John Smith
       */
      appointmentPerson?: string
    }
    /** @description Request object for updating the address of the initial appointment */
    AppointmentAddressRequest: {
      /**
       * @description The address of initial appointment
       * @example Manchester Probation Service, Unit 4, Smith Street, Stockport, SP1 3DN
       */
      appointmentAddress: string
    }
    /** @description Describes an additional condition to create/update */
    AdditionalConditionRequest: {
      /**
       * @description Coded value for the additional condition
       * @example meetingAddress
       */
      code: string
      /**
       * @description The category of the additional condition
       * @example Freedom of movement
       */
      category: string
      /**
       * Format: int32
       * @description Sequence of this additional condition within the additional conditions
       * @example 1
       */
      sequence?: number
      /**
       * @description The textual value for this additional condition
       * @example You must not enter the location [DESCRIPTION]
       */
      text: string
    }
    /** @description Request object for updating the list of additional conditions on a licence */
    AdditionalConditionsRequest: {
      /** @description The list of additional conditions */
      additionalConditions: components['schemas']['AdditionalConditionRequest'][]
      /**
       * @description The type of additional condition, either licence or post sentence supervision
       * @enum {string}
       */
      conditionType: 'AP' | 'PSS'
    }
    /** @description Describes the data entered for an additional condition */
    AdditionalConditionData: {
      /**
       * Format: int64
       * @description The internal ID of this data item, for this condition on this licence
       * @example 98989
       */
      id: number
      /**
       * @description The field name of this data item for this condition on this licence
       * @example location
       */
      field?: string
      /**
       * @description The value of this data item
       * @example Norfolk
       */
      value?: string
      /**
       * Format: int32
       * @description The sequence of this data item, for this condition on this licence
       * @example 1
       */
      sequence: number
      /** @description Whether this data item contributes to the licence or whether it is just used for rendering purposes */
      contributesToLicence: boolean
    }
    /** @description Request object for updating the list of additional conditions on a licence */
    UpdateAdditionalConditionDataRequest: {
      /** @description The list of data inputs associated with this additional condition */
      data: components['schemas']['AdditionalConditionData'][]
    }
    /** @description Describes an audit event request */
    AuditEvent: {
      /**
       * Format: int64
       * @description The internal ID of the audit event
       * @example 1234
       */
      id?: number
      /**
       * Format: int64
       * @description The internal ID of the licence that this event related to, or null if unrelated to a licence
       * @example 1234
       */
      licenceId?: number
      /**
       * Format: date-time
       * @description The date and time of the event
       * @example 12/01/2022 23:14:23
       */
      eventTime: string
      /**
       * @description Username who initiated the event, if a user event, or SYSTEM if an automated event
       * @example X63533
       */
      username?: string
      /**
       * @description The full name of the person who performed this auditable event, or SYSTEM if an automated event.
       * @example Joe Bloggs
       */
      fullName?: string
      /**
       * @description The event type. One of SYSTEM_EVENT or USER_EVENT
       * @example USER_EVENT
       * @enum {string}
       */
      eventType: 'USER_EVENT' | 'SYSTEM_EVENT'
      /**
       * @description A summary of the action taken
       * @example Updated a bespoke condition
       */
      summary: string
      /**
       * @description A detailed description of the action taken
       * @example Updated a bespoke condition
       */
      detail?: string
      /** @description The changes that were made based on the action taken */
      changes?: {
        [key: string]: unknown
      }
    }
    /** @description Search Criteria for Release Date Search */
    ReleaseDateSearch: {
      /**
       * Format: date
       * @description The lower bound for the release date range of which to search - defaults to today if not provided
       * @example 2022-04-20
       */
      earliestReleaseDate?: string
      /**
       * Format: date
       * @description The upper bound for the release date range of which to search. A required field.
       * @example 2022-05-20
       */
      latestReleaseDate: string
      /**
       * @description List of Prison Ids (can include OUT and TRN) to restrict the search by. Unrestricted if not supplied or null
       * @example [
       *       "MDI"
       *     ]
       */
      prisonIds?: string[]
    }
    /** @description An item in the caseload */
    CaseloadItem: {
      /** @description Details about a prisoner */
      prisoner: components['schemas']['Prisoner']
      /** @description Additional CVL specific information including derived fields */
      cvl: components['schemas']['CvlFields']
    }
    /** @description Additional information pertinent to CVL */
    CvlFields: {
      /**
       * @description The type of licence this person should have based on their current dates, NB: this may differ from the current licence type if sentence dates have changed since any licence has been created
       * @example AP_PSS
       * @enum {string}
       */
      licenceType: 'AP' | 'AP_PSS' | 'PSS'
      /**
       * Format: date
       * @description Date which the hard stop period will start
       * @example 03/05/2023
       */
      hardStopDate?: string
      /**
       * Format: date
       * @description Date which to show the hard stop warning
       * @example 01/05/2023
       */
      hardStopWarningDate?: string
      /** @description Is the licence in the hard stop period? (Within two working days of release) */
      isInHardStopPeriod: boolean
      /** @description If ARD||CRD falls on Friday/Bank holiday/Weekend then it is eligible for early release) */
      isEligibleForEarlyRelease: boolean
      /** @description Is the prisoner due for early release */
      isDueForEarlyRelease: boolean
      /** @description Is the prisoner due to be released in the next two working days */
      isDueToBeReleasedInTheNextTwoWorkingDays: boolean
      /**
       * Format: date
       * @description Date that the licence is due to activate
       * @example 05/05/2023
       */
      licenceStartDate?: string
    }
    PageMetadata: {
      /** Format: int64 */
      size?: number
      /** Format: int64 */
      number?: number
      /** Format: int64 */
      totalElements?: number
      /** Format: int64 */
      totalPages?: number
    }
    Prisoner: {
      /**
       * @description Prisoner Number
       * @example A1234AA
       */
      prisonerNumber: string
      /**
       * @description PNC Number
       * @example 12/394773H
       */
      pncNumber?: string
      /**
       * @description CRO Number
       * @example 29906/12J
       */
      croNumber?: string
      /**
       * @description Booking No.
       * @example 0001200924
       */
      bookingId?: string
      /**
       * @description Book Number
       * @example 38412A
       */
      bookNumber?: string
      /**
       * @description First Name
       * @example Joe
       */
      firstName: string
      /**
       * @description Middle Names
       * @example John James
       */
      middleNames?: string
      /**
       * @description Last name
       * @example Bloggs
       */
      lastName: string
      /**
       * Format: date
       * @description Date of Birth
       * @example 1975-04-02
       */
      dateOfBirth: string
      /**
       * @description Status of the prisoner
       * @example ACTIVE IN
       */
      status: string
      /**
       * @description In/Out Status
       * @example IN
       * @enum {string}
       */
      inOutStatus?: 'IN' | 'OUT' | 'TRN'
      /**
       * @description Prison ID
       * @example MDI
       */
      prisonId?: string
      /**
       * @description Location Description
       * @example Outside - released from Leeds
       */
      locationDescription?: string
      /**
       * @description Prison Name
       * @example HMP Leeds
       */
      prisonName?: string
      /**
       * @description Legal Status
       * @example SENTENCED
       * @enum {string}
       */
      legalStatus?:
        | 'RECALL'
        | 'DEAD'
        | 'INDETERMINATE_SENTENCE'
        | 'SENTENCED'
        | 'CONVICTED_UNSENTENCED'
        | 'CIVIL_PRISONER'
        | 'IMMIGRATION_DETAINEE'
        | 'REMAND'
        | 'UNKNOWN'
        | 'OTHER'
      /**
       * @description The prisoner's imprisonment status code.
       * @example LIFE
       */
      imprisonmentStatus?: string
      /**
       * @description The prisoner's imprisonment status description.
       * @example Serving Life Imprisonment
       */
      imprisonmentStatusDescription?: string
      /**
       * @description Most serious offence for this sentence
       * @example Robbery
       */
      mostSeriousOffence: string
      /**
       * @description Indicates that the prisoner has been recalled
       * @example false
       */
      recall?: boolean
      /**
       * @description Indicates that the prisoner has an indeterminate sentence
       * @example true
       */
      indeterminateSentence?: boolean
      /**
       * Format: date
       * @description Start Date for this sentence
       * @example 2020-04-03
       */
      sentenceStartDate?: string
      /**
       * Format: date
       * @description Actual of most likely Release Date
       * @example 2023-05-02
       */
      releaseDate?: string
      /**
       * Format: date
       * @description Release Date Confirmed
       * @example 2023-05-01
       */
      confirmedReleaseDate?: string
      /**
       * Format: date
       * @description Sentence Expiry Date
       * @example 2023-05-01
       */
      sentenceExpiryDate?: string
      /**
       * Format: date
       * @description Licence Expiry Date
       * @example 2023-05-01
       */
      licenceExpiryDate?: string
      /**
       * Format: date
       * @description HDC Eligibility Date
       * @example 2023-05-01
       */
      homeDetentionCurfewEligibilityDate?: string
      /**
       * Format: date
       * @description HDC Actual Date
       * @example 2023-05-01
       */
      homeDetentionCurfewActualDate?: string
      /**
       * Format: date
       * @description HDC End Date
       * @example 2023-05-02
       */
      homeDetentionCurfewEndDate?: string
      /**
       * Format: date
       * @description Top-up supervision start date
       * @example 2023-04-29
       */
      topupSupervisionStartDate?: string
      /**
       * Format: date
       * @description Top-up supervision expiry date
       * @example 2023-05-01
       */
      topupSupervisionExpiryDate?: string
      /**
       * Format: date
       * @description Parole  Eligibility Date
       * @example 2023-05-01
       */
      paroleEligibilityDate?: string
      /**
       * Format: date
       * @description Post Recall Release Date. if postRecallReleaseOverrideDate is available then it will be set as postRecallReleaseDate
       * @example 2023-05-01
       */
      postRecallReleaseDate?: string
      /**
       * Format: date
       * @description Conditional Release Date. If conditionalReleaseOverrideDate is available then it will be set as conditionalReleaseDate
       * @example 2023-05-01
       */
      conditionalReleaseDate?: string
      /**
       * Format: date
       * @description Actual Parole Date
       * @example 2023-05-01
       */
      actualParoleDate?: string
      /**
       * Format: date
       * @description Release on Temporary Licence Date
       * @example 2023-05-01
       */
      releaseOnTemporaryLicenceDate?: string
    }
    SearchResultsPage: {
      content?: components['schemas']['CaseloadItem'][]
      page?: components['schemas']['PageMetadata']
    }
    /** @description Request object for updating licence start dates for a batch of licences. */
    RecalculateLicenceStartDatesRequest: {
      /**
       * Format: int64
       * @description The update batch size.
       */
      batchSize: number
      /**
       * Format: int64
       * @description The ID of the last updated licence.
       */
      id: number
    }
    PrisonerNumbers: {
      /**
       * @description List of prisoner numbers to search by
       * @example [
       *       "A1234AA"
       *     ]
       */
      prisonerNumbers: string[]
    }
    /** @description Request object for searching licences by field */
    MatchLicencesRequest: {
      /**
       * @description A list of prison codes
       * @example ['PVI', 'BAI']
       */
      prison?: string[]
      /**
       * @description A list of licence status codes
       * @example ['ACTIVE', 'APPROVED']
       */
      status?: (
        | 'IN_PROGRESS'
        | 'SUBMITTED'
        | 'APPROVED'
        | 'ACTIVE'
        | 'REJECTED'
        | 'INACTIVE'
        | 'RECALLED'
        | 'VARIATION_IN_PROGRESS'
        | 'VARIATION_SUBMITTED'
        | 'VARIATION_REJECTED'
        | 'VARIATION_APPROVED'
        | 'NOT_STARTED'
        | 'TIMED_OUT'
      )[]
      /**
       * @description A list of staff identifiers - the responsible probation officer
       * @example [
       *       1234,
       *       4321
       *     ]
       */
      staffId?: number[]
      /**
       * @description A list of NOMIS ID's
       * @example ['B76546GH', 'Y76499GY']
       */
      nomsId?: string[]
      /**
       * @description A list of probation delivery unit codes
       * @example ['N55', 'P66']
       */
      pdu?: string[]
    }
    /** @description Response object which summarises a licence */
    LicenceSummary: {
      /**
       * @description kind of licence
       * @example CRD
       * @enum {string}
       */
      kind: 'CRD' | 'VARIATION' | 'HARD_STOP' | 'HDC' | 'HDC_VARIATION'
      /**
       * Format: int64
       * @description Internal identifier for this licence generated within this service
       * @example 123344
       */
      licenceId: number
      /**
       * @description Licence type code
       * @example AP
       * @enum {string}
       */
      licenceType: 'AP' | 'AP_PSS' | 'PSS'
      /**
       * @description The status of this licence
       * @example IN_PROGRESS
       * @enum {string}
       */
      licenceStatus:
        | 'IN_PROGRESS'
        | 'SUBMITTED'
        | 'APPROVED'
        | 'ACTIVE'
        | 'REJECTED'
        | 'INACTIVE'
        | 'RECALLED'
        | 'VARIATION_IN_PROGRESS'
        | 'VARIATION_SUBMITTED'
        | 'VARIATION_REJECTED'
        | 'VARIATION_APPROVED'
        | 'NOT_STARTED'
        | 'TIMED_OUT'
      /**
       * @description The prison nomis identifier for this offender
       * @example A1234AA
       */
      nomisId: string
      /**
       * @description The offender surname
       * @example Smith
       */
      surname?: string
      /**
       * @description The offender forename
       * @example Brian
       */
      forename?: string
      /**
       * @description The prison code where this offender resides or was released from
       * @example MDI
       */
      prisonCode?: string
      /**
       * @description The prison where this offender resides or was released from
       * @example Moorland (HMP)
       */
      prisonDescription?: string
      /**
       * @description The probation area code where the licence is supervised
       * @example N01
       */
      probationAreaCode?: string
      /**
       * @description The probation area description
       * @example Wales
       */
      probationAreaDescription?: string
      /**
       * @description The probation delivery unit (PDU or borough) where the licence is supervised
       * @example N01CA
       */
      probationPduCode?: string
      /**
       * @description The description for the PDU
       * @example North Wales
       */
      probationPduDescription?: string
      /**
       * @description The local administrative unit (LAU or district) where the licence is supervised
       * @example NA01CA-02
       */
      probationLauCode?: string
      /**
       * @description The LAU description
       * @example North Wales
       */
      probationLauDescription?: string
      /**
       * @description The probation team code which supervises the licence
       * @example NA01CA-02-A
       */
      probationTeamCode?: string
      /**
       * @description The team description
       * @example Cardiff South
       */
      probationTeamDescription?: string
      /**
       * Format: date
       * @description The conditional release date on the licence
       * @example 12/12/2022
       */
      conditionalReleaseDate?: string
      /**
       * Format: date
       * @description The actual release date on the licence
       * @example 12/12/2022
       */
      actualReleaseDate?: string
      /**
       * Format: date
       * @description The sentence start date
       * @example 13/09/2019
       */
      sentenceStartDate?: string
      /**
       * Format: date
       * @description The sentence end date
       * @example 13/09/2022
       */
      sentenceEndDate?: string
      /**
       * Format: date
       * @description The date that the licence will start
       * @example 13/09/2022
       */
      licenceStartDate?: string
      /**
       * Format: date
       * @description The date that the licence will expire
       * @example 13/09/2024
       */
      licenceExpiryDate?: string
      /**
       * Format: date
       * @description The date when the post sentence supervision period starts, from prison services
       * @example 06/05/2023
       */
      topupSupervisionStartDate?: string
      /**
       * Format: date
       * @description The date when the post sentence supervision period ends, from prison services
       * @example 06/06/2023
       */
      topupSupervisionExpiryDate?: string
      /**
       * Format: date
       * @description The release date after being recalled
       * @example 06/06/2023
       */
      postRecallReleaseDate?: string
      /**
       * Format: date
       * @description The date when the hard stop period starts
       * @example 11/09/2022
       */
      hardStopDate?: string
      /**
       * Format: date
       * @description The date when warning about the hard stop period begins
       * @example 11/09/2022
       */
      hardStopWarningDate?: string
      /** @description Is the licence in the hard stop period? (Within two working days of release) */
      isInHardStopPeriod: boolean
      /** @description Is the prisoner due for early release */
      isDueForEarlyRelease: boolean
      /** @description Is the prisoner due to be released in the next two working days */
      isDueToBeReleasedInTheNextTwoWorkingDays: boolean
      /**
       * @description The case reference number (CRN) of this person, from either prison or probation service
       * @example X12344
       */
      crn?: string
      /**
       * Format: date
       * @description The offender's date of birth, from either prison or probation services
       * @example 12/12/2001
       */
      dateOfBirth?: string
      /**
       * @description The username of the responsible probation officer
       * @example jsmith
       */
      comUsername?: string
      /**
       * Format: int64
       * @description The bookingId associated with the licence
       * @example 773722
       */
      bookingId?: number
      /**
       * Format: date-time
       * @description The date the licence was created
       * @example 02/12/2001 10:15
       */
      dateCreated?: string
      /**
       * @description The full name of the person who approved the licence
       * @example John Smith
       */
      approvedByName?: string
      /**
       * Format: date-time
       * @description The date and time that this licence was approved
       * @example 24/08/2022 11:30:33
       */
      approvedDate?: string
      /**
       * Format: date-time
       * @description The date and time that this licence was submitted for approval
       * @example 24/08/2022 11:30:33
       */
      submittedDate?: string
      /**
       * @description The version number of this licence
       * @example 1.3
       */
      licenceVersion?: string
      /**
       * Format: int64
       * @description The licence Id which this licence is a version of
       * @example 86
       */
      versionOf?: number
      /**
       * @description Is a review of this licence is required
       * @example true
       */
      isReviewNeeded: boolean
      /**
       * @description The full name of the person who last updated this licence
       * @example Jane Jones
       */
      updatedByFullName?: string
      /**
       * Format: date
       * @description The person’s actual home detention curfew date
       * @example 30/01/2025
       */
      homeDetentionCurfewActualDate?: string
    }
    /** @description Request object for overriding a licence type */
    OverrideLicenceTypeRequest: {
      /**
       * @description The new licence Type to assign to the licence
       * @enum {string}
       */
      licenceType: 'AP' | 'AP_PSS' | 'PSS'
      /** @description Reason for overriding the licence status */
      reason: string
    }
    ProblemDetail: {
      /** Format: uri */
      type?: string
      title?: string
      /** Format: int32 */
      status?: number
      detail?: string
      /** Format: uri */
      instance?: string
      properties?: {
        [key: string]: unknown
      }
    }
    /** @description Request object for overriding a licence status */
    OverrideLicenceStatusRequest: {
      /**
       * @description The new status code to assign to the licence
       * @enum {string}
       */
      statusCode:
        | 'IN_PROGRESS'
        | 'SUBMITTED'
        | 'APPROVED'
        | 'ACTIVE'
        | 'REJECTED'
        | 'INACTIVE'
        | 'RECALLED'
        | 'VARIATION_IN_PROGRESS'
        | 'VARIATION_SUBMITTED'
        | 'VARIATION_REJECTED'
        | 'VARIATION_APPROVED'
        | 'NOT_STARTED'
        | 'TIMED_OUT'
      /** @description Reason for overriding the licence status */
      reason: string
    }
    /** @description Request object for overriding prisoner details */
    OverrideLicencePrisonerDetailsRequest: {
      /**
       * @description The prisoner's forename
       * @example John
       */
      forename: string
      /**
       * @description The prisoner's middle names
       * @example James Micheal
       */
      middleNames?: string
      /**
       * @description The prisoner's surname
       * @example Smith
       */
      surname: string
      /**
       * Format: date
       * @description The prisoner's date of birth
       * @example 21/01/1995
       */
      dateOfBirth: string
      /** @description Reason for overriding the prisoner details */
      reason: string
    }
    /** @description Request for providing details about any electronic monitoring programme */
    UpdateElectronicMonitoringProgrammeRequest: {
      /** @description Is the licence to be tagged for electronic monitoring programme */
      isToBeTaggedForProgramme?: boolean
      /**
       * @description Programme Name of the licence
       * @example Off Some Road
       */
      programmeName?: string
    }
    /** @description A list of licence condition codes to be removed from a licence */
    DeleteAdditionalConditionsByCodeRequest: {
      /**
       * @description List of condition codes
       * @example a1a1a1a1-b2b2-c3c3-d4d4-e5e5e5e5e5e5
       */
      conditionCodes: string[]
    }
    /** @description Request object for deactivating an active licence and its variations */
    DeactivateLicenceAndVariationsRequest: {
      /**
       * @description A key representing the reason for the variation
       * @example RESENTENCED
       * @enum {string}
       */
      reason: 'RECALLED' | 'RESENTENCED'
    }
    /** @description Describes an additional condition request */
    AddAdditionalConditionRequest: {
      /**
       * @description Coded value for the additional condition
       * @example meetingAddress
       */
      conditionCode: string
      /**
       * @description Condition type, either AP or PSS
       * @example AP
       */
      conditionType: string
      /**
       * @description The category of the additional condition
       * @example Freedom of movement
       */
      conditionCategory: string
      /**
       * Format: int32
       * @description Sequence of this additional condition within the additional conditions
       * @example 1
       */
      sequence?: number
      /**
       * @description The textual value for this additional condition
       * @example You must not enter the location [DESCRIPTION]
       */
      conditionText: string
      /**
       * @description The condition text with the users data inserted into the template
       * @example You must not enter the location Tesco Superstore
       */
      expandedText: string
    }
    /** @description Describes an additional condition */
    AdditionalCondition: {
      /**
       * Format: int64
       * @description The internal ID for this additional condition for this licence
       * @example 98989
       */
      id?: number
      /**
       * @description Coded value for the additional condition
       * @example meetingAddress
       */
      code: string
      /**
       * @description Version number for condition
       * @example 2.1
       */
      version?: string
      /**
       * @description The category of the additional condition
       * @example Freedom of movement
       */
      category?: string
      /**
       * Format: int32
       * @description Sequence of this additional condition within the additional conditions
       * @example 1
       */
      sequence?: number
      /**
       * @description The textual value for this additional condition
       * @example You must not enter the location [DESCRIPTION]
       */
      text?: string
      /**
       * @description The condition text with the users data inserted into the template
       * @example You must not enter the location Tesco Superstore
       */
      expandedText?: string
      /** @description The list of data items entered for this additional condition */
      data: components['schemas']['AdditionalConditionData'][]
      /** @description The list of file upload summary for this additional condition */
      uploadSummary: components['schemas']['AdditionalConditionUploadSummary'][]
      /** @description Whether the condition is ready to submit for approval */
      readyToSubmit?: boolean
    }
    /** @description Describes the files uploaded for an additional condition */
    AdditionalConditionUploadSummary: {
      /**
       * Format: int64
       * @description The internal ID of this upload for this condition on this licence
       * @example 98989
       */
      id: number
      /**
       * @description The original file name uploaded for this condition on this licence
       * @example exclusion-zone.pdf
       */
      filename?: string
      /**
       * @description The file type uploaded for this condition on this licence
       * @example application/pdf
       */
      fileType?: string
      /**
       * Format: int32
       * @description The original file size in bytes
       * @example 27566
       */
      fileSize: number
      /**
       * Format: date-time
       * @description The date and time this file was uploaded
       * @example 12/12/2021 10:35
       */
      uploadedTime: string
      /**
       * @description The description provided in this document
       * @example A description of the exclusion zone boundaries
       */
      description?: string
      /**
       * @description The thumbnail for the  exclusion zone map as a base64-encoded JPEG image
       * @example Base64 string
       */
      thumbnailImage?: string
      /**
       * Format: int64
       * @description The id which references the original file data and full size image
       * @example 9999
       */
      uploadDetailId: number
    }
    /** @description Request object for creating a new licence */
    CreateLicenceRequest: {
      /**
       * @description The prison nomis identifier for this offender
       * @example A1234AA
       */
      nomsId: string
      /**
       * @description The type of licence to create
       * @example CRD
       * @enum {string}
       */
      type: 'CRD' | 'HARD_STOP' | 'HDC'
    }
    /** @description A reference to the created licence */
    LicenceCreationResponse: {
      /**
       * Format: int64
       * @description Internal identifier for this licence generated within this service
       * @example 123344
       */
      licenceId: number
    }
    EntityAlreadyExistsResponse: {
      /** Format: int32 */
      status: number
      /** Format: int32 */
      errorCode?: number
      userMessage?: string
      developerMessage?: string
      moreInfo?: string
      /** Format: int64 */
      existingResourceId: number
    }
    /** @description Describes a prisoner's first and last name, their CRN if present and a COM's contact details for use in an email to COM */
    UnapprovedLicence: {
      /**
       * @description The Crime Reference Number
       * @example Z882661
       */
      crn?: string
      /**
       * @description The prisoner's first name
       * @example Jim
       */
      forename?: string
      /**
       * @description The prisoner's last name
       * @example Smith
       */
      surname?: string
      /**
       * @description The COM's first name
       * @example Joseph
       */
      comFirstName?: string
      /**
       * @description The COM's last name
       * @example Bloggs
       */
      comLastName?: string
      /**
       * @description The COM's email address
       * @example jbloggs@probation.gov.uk
       */
      comEmail?: string
    }
    ProbationSearchSortBy: {
      /** @enum {string} */
      field: 'FORENAME' | 'SURNAME' | 'CRN' | 'COM_FORENAME' | 'COM_SURNAME'
      /** @enum {string} */
      direction: 'ASC' | 'DESC'
    }
    /** @description Request object for searching for offenders within a set of teams attached to a staff member */
    ProbationUserSearchRequest: {
      /**
       * @description The query the user wishes to search for (e.g. CRN, name, NOMIS ID)
       * @example Joe Bloggs
       */
      query: string
      /**
       * Format: int64
       * @description The delius staff identifier of the probation staff member
       * @example 14829475
       */
      staffIdentifier: number
      /** @description A list of fields to sort by along with the sort direction for each */
      sortBy: components['schemas']['ProbationSearchSortBy'][]
    }
    /** @description Describes a search result which has been found and enriched */
    FoundProbationRecord: {
      /**
       * @description kind of licence, null if no licence exists
       * @example CRD
       * @enum {string}
       */
      kind?: 'CRD' | 'VARIATION' | 'HARD_STOP' | 'HDC' | 'HDC_VARIATION'
      /**
       * Format: int64
       * @description the prison booking id
       * @example 123
       */
      bookingId?: number
      /** @description The forename and surname of the offender */
      name: string
      /**
       * @description The case reference number (CRN) of the offender,
       * @example X12344
       */
      crn?: string
      /**
       * @description The prison nomis number for the offender
       * @example A1234AA
       */
      nomisId?: string
      /** @description The forename and surname of the COM */
      comName?: string
      /** @description The COM's staff code */
      comStaffCode?: string
      /** @description The description of the COM's team */
      teamName?: string
      /**
       * Format: date
       * @description The release date of the offender
       * @example 27/07/2023
       */
      releaseDate?: string
      /**
       * Format: date
       * @description The date when the hard stop period starts
       * @example 11/09/2022
       */
      hardStopDate?: string
      /**
       * Format: date
       * @description The date when warning about the hard stop period begins
       * @example 11/09/2022
       */
      hardStopWarningDate?: string
      /** @description Is the licence in the hard stop period? (Within two working days of release) */
      isInHardStopPeriod: boolean
      /** @description Is the prisoner due for early release */
      isDueForEarlyRelease: boolean
      /** @description Is the prisoner due to be released in the next two working days */
      isDueToBeReleasedInTheNextTwoWorkingDays: boolean
      /**
       * Format: int64
       * @description The ID of the most recent and relevant licence
       * @example 123344
       */
      licenceId?: number
      /**
       * Format: int64
       * @description The licence Id which this licence is a version of
       * @example 86
       */
      versionOf?: number
      /**
       * @description The type of licence
       * @enum {string}
       */
      licenceType?: 'AP' | 'AP_PSS' | 'PSS'
      /**
       * @description The status of the licence
       * @enum {string}
       */
      licenceStatus?:
        | 'IN_PROGRESS'
        | 'SUBMITTED'
        | 'APPROVED'
        | 'ACTIVE'
        | 'REJECTED'
        | 'INACTIVE'
        | 'RECALLED'
        | 'VARIATION_IN_PROGRESS'
        | 'VARIATION_SUBMITTED'
        | 'VARIATION_REJECTED'
        | 'VARIATION_APPROVED'
        | 'NOT_STARTED'
        | 'TIMED_OUT'
      /** @description Indicates whether the offender is in prison or out on probation */
      isOnProbation?: boolean
      /**
       * @description Label for release date
       * @example Confirmed release date
       */
      releaseDateLabel?: string
      /**
       * @description Is a review of this licence is required
       * @example true
       */
      isReviewNeeded?: boolean
    }
    /** @description Describes an enriched probation search result */
    ProbationSearchResult: {
      /** @description A list of probation search results */
      results: components['schemas']['FoundProbationRecord'][]
      /**
       * Format: int32
       * @description Based on the search results, the number of results where an offender is in prison
       * @example 10
       */
      inPrisonCount: number
      /**
       * Format: int32
       * @description Based on the search results, the number of results where an offender is on probation
       * @example 10
       */
      onProbationCount: number
    }
    /** @description Search criteria for vary approver caseload search */
    VaryApproverCaseloadSearchRequest: {
      /**
       * @description The probation delivery units where the the licence is supervised
       * @example [
       *       "N55PDV"
       *     ]
       */
      probationPduCodes?: string[]
      /**
       * @description The probation region where the licence is supervised
       * @example N01
       */
      probationAreaCode?: string
      /**
       * @description Search text to filter caseload
       * @example 2022-04-20
       */
      searchTerm?: string
    }
    /** @description Describes a vary approver case */
    VaryApproverCase: {
      /**
       * Format: int64
       * @description Unique identifier for this licence within the service
       * @example 99999
       */
      licenceId?: number
      /**
       * @description The full name of the person on licence
       * @example An offender
       */
      name?: string
      /**
       * @description The case reference number (CRN) for the person on this licence
       * @example X12444
       */
      crnNumber: string
      /**
       * @description The licence type code
       * @example AP
       * @enum {string}
       */
      licenceType?: 'AP' | 'AP_PSS' | 'PSS'
      /**
       * Format: date
       * @description The date on which the licence variation was created
       * @example 30/11/2022
       */
      variationRequestDate?: string
      /**
       * Format: date
       * @description The date on which the prisoner leaves custody
       * @example 30/11/2022
       */
      releaseDate?: string
      /** @description The details for the active supervising probation officer */
      probationPractitioner?: string
    }
    /** @description Describes an approval case */
    ApprovalCase: {
      /**
       * Format: int64
       * @description Unique identifier for this licence within the service
       * @example 99999
       */
      licenceId?: number
      /**
       * @description The full name of the person on licence
       * @example John Doe
       */
      name?: string
      /**
       * @description The prison identifier for the person on this licence
       * @example A9999AA
       */
      prisonerNumber?: string
      /**
       * @description The full name of the person who last submitted this licence
       * @example Jane Doe
       */
      submittedByFullName?: string
      /**
       * Format: date
       * @description The date on which the prisoner leaves custody
       * @example 30/11/2022
       */
      releaseDate?: string
      /**
       * @description Whether an urgent approval is needed for this person
       * @example false
       */
      urgentApproval?: boolean
      /**
       * @description The username who approved the licence on behalf of the prison governor
       * @example X33221
       */
      approvedBy?: string
      /**
       * Format: date-time
       * @description The date and time that this prison approved this licence
       * @example 19/06/2024 09:00:00
       */
      approvedOn?: string
      /**
       * @description Is the prisoner due for early release
       * @example false
       */
      isDueForEarlyRelease?: boolean
      /** @description The details for the active supervising probation officer */
      probationPractitioner?: components['schemas']['ProbationPractitioner']
      /**
       * @description Type of this licence
       * @enum {string}
       */
      kind?: 'CRD' | 'VARIATION' | 'HARD_STOP' | 'HDC' | 'HDC_VARIATION'
    }
    /** @description Describes a probation practitioner on an approval case */
    ProbationPractitioner: {
      /**
       * @description The unique staff code for the probation practitioner
       * @example SH00001
       */
      staffCode?: string
      /**
       * @description The full name of the probation practitioner
       * @example Joe Bloggs
       */
      name: string
      /**
       * Format: int64
       * @description Probation staffIdentifier in nDelius
       * @example 120003434
       */
      staffIdentifier?: number
      /**
       * @description The NOMIS username of the case administrator
       * @example jbloggs
       */
      staffUsername?: string
    }
    /** @description Request object for requesting a case load for a team */
    TeamCaseloadRequest: {
      /**
       * @description The probation team codes to get the case loads for
       * @example [
       *       "teamA",
       *       "teamC"
       *     ]
       */
      probationTeamCodes: string[]
      /**
       * @description The teams linked to the user to get the case loads for
       * @example [
       *       "teamA",
       *       "teamC"
       *     ]
       */
      teamSelected: string[]
    }
    /** @description Describes an COM case */
    ComCase: {
      /**
       * @description The full name of the person on licence
       * @example John Doe
       */
      name?: string
      /**
       * @description The case reference number (CRN) for the person on this licence
       * @example X12444
       */
      crnNumber?: string
      /**
       * @description The prison identifier for the person on this licence
       * @example A9999AA
       */
      prisonerNumber?: string
      /**
       * Format: date
       * @description The date on which the prisoner leaves custody
       * @example 30/11/2022
       */
      releaseDate?: string
      /**
       * Format: int64
       * @description Unique identifier for this licence within the service
       * @example 99999
       */
      licenceId?: number
      /**
       * @description The new status for this licence
       * @example APPROVED
       * @enum {string}
       */
      licenceStatus?:
        | 'IN_PROGRESS'
        | 'SUBMITTED'
        | 'APPROVED'
        | 'ACTIVE'
        | 'REJECTED'
        | 'INACTIVE'
        | 'RECALLED'
        | 'VARIATION_IN_PROGRESS'
        | 'VARIATION_SUBMITTED'
        | 'VARIATION_REJECTED'
        | 'VARIATION_APPROVED'
        | 'NOT_STARTED'
        | 'TIMED_OUT'
      /**
       * @description The licence type code
       * @example AP
       * @enum {string}
       */
      licenceType?: 'AP' | 'AP_PSS' | 'PSS'
      /**
       * @description Is a review of this licence is required
       * @example true
       */
      isReviewNeeded: boolean
      /** @description The details for the active supervising probation officer */
      probationPractitioner?: components['schemas']['ProbationPractitioner']
      /**
       * Format: date
       * @description Date which the hard stop period will start
       * @example 03/05/2023
       */
      hardStopDate?: string
      /**
       * Format: date
       * @description Date which to show the hard stop warning
       * @example 01/05/2023
       */
      hardStopWarningDate?: string
      /**
       * @description Type of this licence
       * @example CRD
       * @enum {string}
       */
      kind?: 'CRD' | 'VARIATION' | 'HARD_STOP' | 'HDC' | 'HDC_VARIATION'
      /**
       * @description Is the prisoner due for early release
       * @example false
       */
      isDueForEarlyRelease: boolean
      /**
       * @description How this licence will need to be created
       * @example PRISON_WILL_CREATE_THIS_LICENCE
       * @enum {string}
       */
      licenceCreationType?:
        | 'LICENCE_CHANGES_NOT_APPROVED_IN_TIME'
        | 'PRISON_WILL_CREATE_THIS_LICENCE'
        | 'LICENCE_CREATED_BY_PRISON'
        | 'LICENCE_NOT_STARTED'
        | 'LICENCE_IN_PROGRESS'
    }
    /** @description Search Criteria for CA Caseload Search */
    CaCaseloadSearch: {
      /**
       * @description Search text to filter caseload
       * @example 2022-04-20
       */
      searchString?: string
      /**
       * @description List of Prison Ids (can include OUT and TRN) to restrict the search by. Unrestricted if not supplied or null
       * @example [
       *       "MDI"
       *     ]
       */
      prisonCodes: string[]
    }
    /** @description Describes an CA(OMU) case */
    CaCase: {
      /**
       * @description Type of this licence
       * @example CRD
       * @enum {string}
       */
      kind?: 'CRD' | 'VARIATION' | 'HARD_STOP' | 'HDC' | 'HDC_VARIATION'
      /**
       * Format: int64
       * @description Unique identifier for this licence within the service
       * @example 99999
       */
      licenceId?: number
      /**
       * Format: int64
       * @description The version number of this licence
       * @example 1.3
       */
      licenceVersionOf?: number
      /**
       * @description The full name of the person on licence
       * @example John Doe
       */
      name: string
      /**
       * @description The prison identifier for the person on this licence
       * @example A9999AA
       */
      prisonerNumber: string
      /** @description The details for the active supervising probation officer */
      probationPractitioner?: components['schemas']['ProbationPractitioner']
      /**
       * Format: date
       * @description The date on which the prisoner leaves custody
       * @example 30/11/2022
       */
      releaseDate?: string
      /**
       * @description Label for release date
       * @example Confirmed release date
       */
      releaseDateLabel?: string
      /**
       * @description The new status for this licence
       * @example APPROVED
       * @enum {string}
       */
      licenceStatus:
        | 'IN_PROGRESS'
        | 'SUBMITTED'
        | 'APPROVED'
        | 'ACTIVE'
        | 'REJECTED'
        | 'INACTIVE'
        | 'RECALLED'
        | 'VARIATION_IN_PROGRESS'
        | 'VARIATION_SUBMITTED'
        | 'VARIATION_REJECTED'
        | 'VARIATION_APPROVED'
        | 'NOT_STARTED'
        | 'TIMED_OUT'
      /**
       * @description The type of tab this licence has to be populated
       * @example RELEASES_IN_NEXT_TWO_WORKING_DAYS
       * @enum {string}
       */
      tabType?: 'RELEASES_IN_NEXT_TWO_WORKING_DAYS' | 'FUTURE_RELEASES' | 'ATTENTION_NEEDED'
      /**
       * @description Legal Status
       * @example SENTENCED
       * @enum {string}
       */
      nomisLegalStatus?:
        | 'RECALL'
        | 'DEAD'
        | 'INDETERMINATE_SENTENCE'
        | 'SENTENCED'
        | 'CONVICTED_UNSENTENCED'
        | 'CIVIL_PRISONER'
        | 'IMMIGRATION_DETAINEE'
        | 'REMAND'
        | 'UNKNOWN'
        | 'OTHER'
      /**
       * @description The full name of the person who last updated this licence
       * @example Jane Jones
       */
      lastWorkedOnBy?: string
      /**
       * @description Is the prisoner due for early release
       * @example false
       */
      isDueForEarlyRelease?: boolean
      /** @description Is the licence in the hard stop period? (Within two working days of release) */
      isInHardStopPeriod: boolean
    }
    /** @description Request object for searching for offenders within a set of teams attached to a staff member */
    PrisonUserSearchRequest: {
      /**
       * @description The query the user wishes to search for (e.g. CRN, name, NOMIS ID)
       * @example Joe Bloggs
       */
      query: string
      /**
       * @description The prison caseloads of the prison staff member
       * @example BAI
       */
      prisonCaseload: string
    }
    /** @description Describes an audit event request */
    AuditRequest: {
      /**
       * Format: int64
       * @description The internal ID of the licence to request audit events for
       * @example 1234
       */
      licenceId?: number
      /**
       * @description Username to request events for
       * @example X63533
       */
      username?: string
      /**
       * Format: date-time
       * @description The start date and time to query for events (default is 1 month ago)
       * @example 13/11/2021 23:14:13
       */
      startTime: string
      /**
       * Format: date-time
       * @description The end time to query for events (default is now)
       * @example 12/01/2022 23:14:13
       */
      endTime: string
    }
    /** @description The list of licences, audit events and licence events */
    Content: {
      /** @description The list of licence events */
      licences: components['schemas']['SarLicence'][]
      /** @description The list of audit events */
      auditEvents: components['schemas']['SarAuditEvent'][]
    }
    /** @description Describes an additional condition */
    SarAdditionalCondition: {
      /**
       * @description Coded value for the additional condition
       * @example meetingAddress
       */
      code: string
      /**
       * @description Version number for condition
       * @example 2.1
       */
      version?: string
      /**
       * @description The category of the additional condition
       * @example Freedom of movement
       */
      category?: string
      /**
       * @description The condition text with the users data inserted into the template
       * @example You must not enter the location Tesco Superstore
       */
      text?: string
      /** @description The list of file upload summary for this additional condition */
      uploadSummary: components['schemas']['SarAdditionalConditionUploadSummary'][]
    }
    /** @description Describes the files uploaded for an additional condition */
    SarAdditionalConditionUploadSummary: {
      /**
       * @description The original file name uploaded for this condition on this licence
       * @example exclusion-zone.pdf
       */
      filename?: string
      /**
       * @description The file type uploaded for this condition on this licence
       * @example application/pdf
       */
      fileType?: string
      /**
       * Format: int32
       * @description The original file size in bytes
       * @example 27566
       */
      fileSize: number
      /**
       * Format: date-time
       * @description The date and time this file was uploaded
       * @example 12/12/2021 10:35
       */
      uploadedTime: string
      /**
       * @description The description provided in this document
       * @example A description of the exclusion zone boundaries
       */
      description?: string
    }
    /** @description Describes an audit event request */
    SarAuditEvent: {
      /**
       * Format: int64
       * @description The internal ID of the licence that this event related to, or null if unrelated to a licence
       * @example 1234
       */
      licenceId?: number
      /**
       * Format: date-time
       * @description The date and time of the event
       * @example 12/01/2022 23:14:23
       */
      eventTime: string
      /**
       * @description Username who initiated the event, if a user event, or SYSTEM if an automated event
       * @example X63533
       */
      username?: string
      /**
       * @description The full name of the person who performed this auditable event, or SYSTEM if an automated event.
       * @example Joe Bloggs
       */
      fullName?: string
      /**
       * @description The event type. One of SYSTEM_EVENT or USER_EVENT
       * @example User event
       * @enum {string}
       */
      eventType: 'User event' | 'System event'
      /**
       * @description A summary of the action taken
       * @example Updated a bespoke condition
       */
      summary: string
      /**
       * @description A detailed description of the action taken
       * @example Updated a bespoke condition
       */
      detail?: string
    }
    /** @description The Sar Content holds the prisoner details */
    SarContent: {
      /** @description SAR content */
      content: components['schemas']['Content']
    }
    /** @description Describes a licence within this service1 */
    SarLicence: {
      /**
       * Format: int64
       * @description Unique identifier for this licence within the service
       * @example 99999
       */
      id: number
      /**
       * @description Kind of licence
       * @example CRD
       */
      kind: string
      /**
       * @description The licence type code
       * @example All purpose
       * @enum {string}
       */
      typeCode: 'All purpose' | 'All purpose & post sentence supervision' | 'Post sentence supervision'
      /**
       * @description The current status code for this licence
       * @example In progress
       * @enum {string}
       */
      statusCode?:
        | 'In progress'
        | 'Submitted'
        | 'Approved'
        | 'Active'
        | 'Rejected'
        | 'Inactive'
        | 'Recalled'
        | 'Variation in progress'
        | 'Variation submitted'
        | 'Variation rejected'
        | 'Variation approved'
        | 'Not started'
        | 'Timed out'
      /**
       * @description The prison identifier for the person on this licence
       * @example A9999AA
       */
      nomsId?: string
      /**
       * Format: int64
       * @description The prison internal booking ID for the person on this licence
       * @example 989898
       */
      bookingId?: number
      /**
       * @description Who the person will meet at their initial appointment
       * @example Duty officer
       */
      appointmentPerson?: string
      /**
       * Format: date-time
       * @description The date and time of the initial appointment
       * @example 23/08/2022 12:12
       */
      appointmentTime?: string
      /**
       * @description The type of appointment time of the initial appointment
       * @example Specific date time
       * @enum {string}
       */
      appointmentTimeType?: 'Immediate upon release' | 'Next working day before 2pm' | 'Specific date time'
      /**
       * @description The address of initial appointment
       * @example Manchester Probation Service, Unit 4, Smith Street, Stockport, SP1 3DN
       */
      appointmentAddress?: string
      /**
       * @description The UK telephone number to contact the person the offender should meet for their initial meeting
       * @example 0114 2557665
       */
      appointmentContact?: string
      /**
       * Format: date-time
       * @description The date and time that this prison approved this licence
       * @example 24/08/2022 11:30:33
       */
      approvedDate?: string
      /**
       * @description The username who approved the licence on behalf of the prison governor
       * @example X33221
       */
      approvedByUsername?: string
      /**
       * Format: date-time
       * @description The date and time that this licence was submitted for approval
       * @example 24/08/2022 11:30:33
       */
      submittedDate?: string
      /**
       * @description The full name of the person who approved the licence on behalf of the prison governor
       * @example John Smith
       */
      approvedByName?: string
      /**
       * Format: date-time
       * @description The date and time that this licence was superseded by a new variant
       * @example 24/08/2022 11:30:33
       */
      supersededDate?: string
      /**
       * Format: date-time
       * @description The date and time that this licence was first created
       * @example 24/08/2022 09:30:33
       */
      dateCreated?: string
      /**
       * @description The username which created this licence
       * @example X12333
       */
      createdByUsername?: string
      /**
       * Format: date-time
       * @description The date and time that this licence was last updated
       * @example 24/08/2022 09:30:33
       */
      dateLastUpdated?: string
      /**
       * @description The username of the person who last updated this licence
       * @example X34433
       */
      updatedByUsername?: string
      /** @description The list of standard licence conditions on this licence */
      standardLicenceConditions?: components['schemas']['SarStandardCondition'][]
      /** @description The list of standard post sentence supervision conditions on this licence */
      standardPssConditions?: components['schemas']['SarStandardCondition'][]
      /** @description The list of additional licence conditions on this licence */
      additionalLicenceConditions: components['schemas']['SarAdditionalCondition'][]
      /** @description The list of additional post sentence supervision conditions on this licence */
      additionalPssConditions: components['schemas']['SarAdditionalCondition'][]
      /** @description The list of bespoke conditions on this licence */
      bespokeConditions: string[]
      /**
       * @description The full name of the person who created licence or variation
       * @example Gordon Sumner
       */
      createdByFullName?: string
      /**
       * @description The version number of this licence
       * @example 1.3
       */
      licenceVersion?: string
    }
    /** @description Describes a standard condition on this licence */
    SarStandardCondition: {
      /**
       * @description The unique code for this standard condition
       * @example 9ce9d594-e346-4785-9642-c87e764bee37
       */
      code?: string
      /**
       * @description The text of this standard condition
       * @example Be of generally good behaviour
       */
      text?: string
    }
    Count: {
      /**
       * Format: int64
       * @description The total number of records
       * @example 501
       */
      count: number
    }
    DlqMessage: {
      body: {
        [key: string]: unknown
      }
      messageId: string
    }
    GetDlqResult: {
      /** Format: int32 */
      messagesFoundCount: number
      /** Format: int32 */
      messagesReturnedCount: number
      messages: components['schemas']['DlqMessage'][]
    }
    LicencePolicy: {
      version: string
      standardConditions: components['schemas']['StandardConditions']
      additionalConditions: components['schemas']['AdditionalConditions']
      changeHints: components['schemas']['ChangeHint'][]
    }
    /** @description Describes a bespoke condition on a licence */
    BespokeCondition: {
      /**
       * Format: int64
       * @description The internal ID for this condition on this licence
       * @example 98989
       */
      id: number
      /**
       * Format: int32
       * @description The sequence of this bespoke condition on this licence
       * @example 1
       */
      sequence?: number
      /**
       * @description The text of this bespoke condition
       * @example You should not visit any music venues
       */
      text?: string
    }
    /** @description Describes a licence within this service, A discriminator exists to distinguish between different types of licence */
    Licence: {
      /**
       * Format: int64
       * @description Unique identifier for this licence within the service
       * @example 99999
       */
      id: number
      /**
       * @description The licence type code
       * @example AP
       * @enum {string}
       */
      typeCode: 'AP' | 'AP_PSS' | 'PSS'
      /**
       * @description The version number used for standard and additional conditions
       * @example 1.4
       */
      version?: string
      /**
       * @description The police national computer number (PNC) for the person on this licence
       * @example 2015/12444
       */
      pnc?: string
      /**
       * @description The criminal records office number (CRO) for the person on this licence
       * @example A/12444
       */
      cro?: string
      /**
       * @description The case reference number (CRN) for the person on this licence
       * @example X12444
       */
      crn?: string
      kind: string
      /**
       * @description The current status code for this licence
       * @example IN_PROGRESS
       * @enum {string}
       */
      statusCode?:
        | 'IN_PROGRESS'
        | 'SUBMITTED'
        | 'APPROVED'
        | 'ACTIVE'
        | 'REJECTED'
        | 'INACTIVE'
        | 'RECALLED'
        | 'VARIATION_IN_PROGRESS'
        | 'VARIATION_SUBMITTED'
        | 'VARIATION_REJECTED'
        | 'VARIATION_APPROVED'
        | 'NOT_STARTED'
        | 'TIMED_OUT'
      /** @deprecated */
      isVariation: boolean
      /**
       * Format: int64
       * @description The nDELIUS staff identifier for the supervising probation officer
       * @example 12345
       */
      comStaffId?: number
      /**
       * @description The prison booking number for the person on this licence
       * @example F12333
       */
      bookingNo?: string
      /**
       * @description The prison identifier for the person on this licence
       * @example A9999AA
       */
      nomsId?: string
      /**
       * @description The agency code of the detaining prison
       * @example LEI
       */
      prisonCode?: string
      /** @description Is this licence in PSS period?(LED < TODAY <= TUSED) */
      isInPssPeriod?: boolean
      /**
       * @description The email address for the supervising probation officer
       * @example jane.jones@nps.gov.uk
       */
      comEmail?: string
      /**
       * @description The middle names of the person on licence
       * @example John Peter
       */
      middleNames?: string
      /**
       * Format: date
       * @description The date of birth of the person on licence
       * @example 12/05/1987
       */
      dateOfBirth?: string
      /**
       * @description The nDELIUS user name for the supervising probation officer
       * @example X32122
       */
      comUsername?: string
      /**
       * Format: date-time
       * @description The date and time that this licence was first created
       * @example 24/08/2022 09:30:33
       */
      dateCreated?: string
      /**
       * @description Is a review of this licence is required
       * @example true
       */
      isReviewNeeded: boolean
      /**
       * @description The first name of the person on licence
       * @example Michael
       */
      forename?: string
      /**
       * @description The family name of the person on licence
       * @example Smith
       */
      surname?: string
      /**
       * Format: int64
       * @description The prison internal booking ID for the person on this licence
       * @example 989898
       */
      bookingId?: number
      /**
       * @description The username who approved the licence on behalf of the prison governor
       * @example X33221
       */
      approvedByUsername?: string
      /**
       * @description The full name of the person who approved the licence on behalf of the prison governor
       * @example John Smith
       */
      approvedByName?: string
      /**
       * Format: date-time
       * @description The date and time that this prison approved this licence
       * @example 24/08/2022 11:30:33
       */
      approvedDate?: string
      /**
       * Format: date-time
       * @description The date and time that this licence was submitted for approval
       * @example 24/08/2022 11:30:33
       */
      submittedDate?: string
      /**
       * @description The agency description of the detaining prison
       * @example Leeds (HMP)
       */
      prisonDescription?: string
      /**
       * @description The telephone number to contact the prison
       * @example 0161 234 4747
       */
      prisonTelephone?: string
      /** @description The list of bespoke conditions on this licence */
      bespokeConditions: components['schemas']['BespokeCondition'][]
      /**
       * @description The team code that is supervising this licence
       * @example Cardiff-A
       */
      probationTeamCode?: string
      /**
       * @description The probation area code where this licence is supervised from
       * @example N01
       */
      probationAreaCode?: string
      /**
       * @description The Probation Delivery Unit (PDU or borough) supervising this licence
       * @example PDU01
       */
      probationPduCode?: string
      /**
       * @description The Local Administrative Unit (LAU or district) supervising this licence
       * @example LAU01
       */
      probationLauCode?: string
      /**
       * Format: date
       * @description The actual release date (if set)
       * @example 13/09/2022
       */
      actualReleaseDate?: string
      /**
       * Format: date
       * @description The sentence start date
       * @example 13/09/2019
       */
      sentenceStartDate?: string
      /**
       * Format: date
       * @description The sentence end date
       * @example 13/09/2022
       */
      sentenceEndDate?: string
      /**
       * Format: date
       * @description The date that the licence will expire
       * @example 13/09/2024
       */
      licenceExpiryDate?: string
      /**
       * @description The full name of the person who last submitted this licence
       * @example Jane Jones
       */
      submittedByFullName?: string
      /**
       * Format: date
       * @description The date that the licence will start
       * @example 13/09/2022
       */
      licenceStartDate?: string
      /**
       * Format: date
       * @description If ARD||CRD falls on Friday/Bank holiday/Weekend then it contains Earliest possible release date or ARD||CRD
       */
      earliestReleaseDate?: string
      /**
       * @description The version number of this licence
       * @example 1.3
       */
      licenceVersion?: string
      /**
       * @description The full name of the person who last updated this licence
       * @example Jane Jones
       */
      updatedByFullName?: string
      /**
       * @description Who the person will meet at their initial appointment
       * @example Duty officer
       */
      appointmentPerson?: string
      /**
       * @description The type of appointment time of the initial appointment
       * @example SPECIFIC_DATE_TIME
       * @enum {string}
       */
      appointmentTimeType?: 'IMMEDIATE_UPON_RELEASE' | 'NEXT_WORKING_DAY_2PM' | 'SPECIFIC_DATE_TIME'
      /**
       * Format: date-time
       * @description The date and time of the initial appointment
       * @example 23/08/2022 12:12
       */
      appointmentTime?: string
      /**
       * @description The UK telephone number to contact the person the offender should meet for their initial meeting
       * @example 0114 2557665
       */
      appointmentContact?: string
      /**
       * @description The address of initial appointment
       * @example Manchester Probation Service, Unit 4, Smith Street, Stockport, SP1 3DN
       */
      appointmentAddress?: string
      /**
       * Format: date-time
       * @description The date and time that this licence was superseded by a new variant
       * @example 24/08/2022 11:30:33
       */
      supersededDate?: string
      /**
       * Format: date-time
       * @description The date and time that this licence was last updated
       * @example 24/08/2022 09:30:33
       */
      dateLastUpdated?: string
      /**
       * @description The username of the person who last updated this licence
       * @example X34433
       */
      updatedByUsername?: string
      /** @description Is this licence activated in PSS period?(LED < LAD <= TUSED) */
      isActivatedInPssPeriod?: boolean
      /**
       * @description The username which created this licence
       * @example X12333
       */
      createdByUsername?: string
      /**
       * @description The full name of the person who created licence or variation
       * @example Gordon Sumner
       */
      createdByFullName?: string
      /** @description The list of standard licence conditions on this licence */
      standardLicenceConditions?: components['schemas']['StandardCondition'][]
      /** @description The list of standard post sentence supervision conditions on this licence */
      standardPssConditions?: components['schemas']['StandardCondition'][]
      /**
       * @description The probation area description
       * @example Wales
       */
      probationAreaDescription?: string
      /**
       * @description The description for the PDU
       * @example North Wales
       */
      probationPduDescription?: string
      /**
       * @description The LAU description
       * @example North Wales
       */
      probationLauDescription?: string
      /**
       * @description The team description
       * @example Cardiff South
       */
      probationTeamDescription?: string
      /**
       * Format: date
       * @description The date when the post sentence supervision period starts, from prison services
       * @example 06/05/2023
       */
      topupSupervisionStartDate?: string
      /**
       * Format: date
       * @description The date when the post sentence supervision period ends, from prison services
       * @example 06/06/2023
       */
      topupSupervisionExpiryDate?: string
      /**
       * @description The type of appointment with for the initial appointment
       * @example SPECIFIC_PERSON
       * @enum {string}
       */
      appointmentPersonType?: 'DUTY_OFFICER' | 'RESPONSIBLE_COM' | 'SPECIFIC_PERSON'
      /** @description If ARD||CRD falls on Friday/Bank holiday/Weekend then it is eligible for early release) */
      isEligibleForEarlyRelease: boolean
      /**
       * Format: date
       * @description The earliest conditional release date of the person on licence
       * @example 13/08/2022
       */
      conditionalReleaseDate?: string
      /**
       * Format: date
       * @description The release date after being recalled
       * @example 06/06/2023
       */
      postRecallReleaseDate?: string
      /**
       * @description The full name of the supervising probation officer
       * @example Jane Jones
       */
      responsibleComFullName?: string
      /** @description The list of additional licence conditions on this licence */
      additionalLicenceConditions: components['schemas']['AdditionalCondition'][]
      /** @description The list of additional post sentence supervision conditions on this licence */
      additionalPssConditions: components['schemas']['AdditionalCondition'][]
    } & (
      | components['schemas']['CrdLicence']
      | components['schemas']['VariationLicence']
      | components['schemas']['HardStopLicence']
      | components['schemas']['HdcLicence']
      | components['schemas']['HdcVariationLicence']
    )
    /** @description Describes a CRD licence within this service */
    CrdLicence: Omit<
      WithRequired<
        components['schemas']['Licence'],
        | 'additionalLicenceConditions'
        | 'additionalPssConditions'
        | 'bespokeConditions'
        | 'id'
        | 'isEligibleForEarlyRelease'
        | 'isReviewNeeded'
        | 'isVariation'
        | 'kind'
        | 'typeCode'
      >,
      'kind'
    > & {
      /**
       * @description Type of this licence
       * @example CRD
       * @enum {string}
       */
      kind: 'CRD'
      /**
       * Format: date
       * @description Date which the hard stop period will start
       * @example 03/05/2023
       */
      hardStopDate?: string
      /**
       * Format: date
       * @description Date which to show the hard stop warning
       * @example 01/05/2023
       */
      hardStopWarningDate?: string
      /** @description Is the licence in the hard stop period? (Within two working days of release) */
      isInHardStopPeriod: boolean
      /** @description Is the prisoner due for early release */
      isDueForEarlyRelease: boolean
      /** @description Is the prisoner due to be released in the next two working days */
      isDueToBeReleasedInTheNextTwoWorkingDays: boolean
    } & {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      kind: 'CRD'
    }
    /** @description Describes a licence that was created by a prison */
    HardStopLicence: Omit<
      WithRequired<
        components['schemas']['Licence'],
        | 'additionalLicenceConditions'
        | 'additionalPssConditions'
        | 'bespokeConditions'
        | 'id'
        | 'isEligibleForEarlyRelease'
        | 'isReviewNeeded'
        | 'isVariation'
        | 'kind'
        | 'typeCode'
      >,
      'kind'
    > & {
      /**
       * @description Type of this licence
       * @example HARD_STOP
       * @enum {string}
       */
      kind: 'HARD_STOP'
      /**
       * Format: date-time
       * @description The date time when the hardstop licence was reviewed by a probation practitioner
       * @example 06/06/2023 09:32
       */
      reviewDate?: string
      /**
       * Format: date
       * @description Date which the hard stop period will start
       * @example 03/05/2023
       */
      hardStopDate?: string
      /**
       * Format: date
       * @description Date which to show the hard stop warning
       * @example 01/05/2023
       */
      hardStopWarningDate?: string
      /** @description Is the licence in the hard stop period? (Within two working days of release) */
      isInHardStopPeriod: boolean
      /** @description Is the prisoner due for early release */
      isDueForEarlyRelease: boolean
      /** @description Is the prisoner due to be released in the next two working days */
      isDueToBeReleasedInTheNextTwoWorkingDays: boolean
    } & {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      kind: 'HARD_STOP'
    }
    /** @description Describes a curfew address on a HDC licence */
    HdcCurfewAddress: {
      /**
       * Format: int64
       * @description The internal ID for this curfew address on this HDC licence
       * @example 98987
       */
      id?: number
      /**
       * @description The first line of the curfew address
       * @example 1
       */
      addressLine1?: string
      /**
       * @description The second line of the curfew address
       * @example Off Some Road
       */
      addressLine2?: string
      /**
       * @description The town or city associated with the curfew address
       * @example Some Town or City
       */
      townOrCity?: string
      /**
       * @description The county for the curfew address
       * @example SomeCounty
       */
      county?: string
      /**
       * @description The postcode for the curfew address
       * @example SO30 2UH
       */
      postcode?: string
    }
    /** @description Describes a HDC licence within this service */
    HdcLicence: Omit<
      WithRequired<
        components['schemas']['Licence'],
        | 'additionalLicenceConditions'
        | 'additionalPssConditions'
        | 'bespokeConditions'
        | 'id'
        | 'isEligibleForEarlyRelease'
        | 'isReviewNeeded'
        | 'isVariation'
        | 'kind'
        | 'typeCode'
      >,
      'kind'
    > & {
      /**
       * @description Type of this licence
       * @example HDC
       * @enum {string}
       */
      kind: 'HDC'
      /**
       * Format: date
       * @description The offender’s actual home detention curfew date
       * @example 06/05/2023
       */
      homeDetentionCurfewActualDate?: string
      /**
       * Format: date
       * @description The offender’s home detention curfew end date
       * @example 06/05/2023
       */
      homeDetentionCurfewEndDate?: string
      /** @description The curfew times for this licence */
      curfewTimes?: components['schemas']['HdcCurfewTimes'][]
      /**
       * Format: date
       * @description Date which the hard stop period will start
       * @example 03/05/2023
       */
      hardStopDate?: string
      /**
       * Format: date
       * @description Date which to show the hard stop warning
       * @example 01/05/2023
       */
      hardStopWarningDate?: string
      /** @description Is the licence in the hard stop period? (Within two working days of release) */
      isInHardStopPeriod: boolean
      /** @description Is the prisoner due for early release */
      isDueForEarlyRelease: boolean
      /** @description Is the prisoner due to be released in the next two working days */
      isDueToBeReleasedInTheNextTwoWorkingDays: boolean
      /** @description The curfew address for this licence */
      curfewAddress?: components['schemas']['HdcCurfewAddress']
    } & {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      kind: 'HDC'
    }
    /** @description Describes a HDC licence variation within this service */
    HdcVariationLicence: Omit<
      WithRequired<
        components['schemas']['Licence'],
        | 'additionalLicenceConditions'
        | 'additionalPssConditions'
        | 'bespokeConditions'
        | 'id'
        | 'isEligibleForEarlyRelease'
        | 'isReviewNeeded'
        | 'isVariation'
        | 'kind'
        | 'typeCode'
      >,
      'kind'
    > & {
      /**
       * @description Type of this licence
       * @example HDC_VARIATION
       * @enum {string}
       */
      kind: 'HDC_VARIATION'
      /**
       * Format: date
       * @description The offender’s actual home detention curfew date
       * @example 06/05/2023
       */
      homeDetentionCurfewActualDate?: string
      /**
       * Format: date
       * @description The offender’s home detention curfew end date
       * @example 06/05/2023
       */
      homeDetentionCurfewEndDate?: string
      /**
       * @description Have you have discussed this variation request with your SPO?
       * @example Yes
       */
      spoDiscussion?: string
      /**
       * @description Have you consulted with the victim liaison officer (VLO) for this case?
       * @example Yes
       */
      vloDiscussion?: string
      /** @description The curfew times for this licence */
      curfewTimes?: components['schemas']['HdcCurfewTimes'][]
      /**
       * Format: int64
       * @description The licence Id which this licence is a variation of
       */
      variationOf?: number
      /** @description The curfew address for this licence */
      curfewAddress?: components['schemas']['HdcCurfewAddress']
    } & {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      kind: 'HDC_VARIATION'
    }
    /** @description Describes a licence variation within this service */
    VariationLicence: Omit<
      WithRequired<
        components['schemas']['Licence'],
        | 'additionalLicenceConditions'
        | 'additionalPssConditions'
        | 'bespokeConditions'
        | 'id'
        | 'isEligibleForEarlyRelease'
        | 'isReviewNeeded'
        | 'isVariation'
        | 'kind'
        | 'typeCode'
      >,
      'kind'
    > & {
      /**
       * @description Type of this licence
       * @example VARIATION
       * @enum {string}
       */
      kind: 'VARIATION'
      /**
       * @description Have you have discussed this variation request with your SPO?
       * @example Yes
       */
      spoDiscussion?: string
      /**
       * @description Have you consulted with the victim liaison officer (VLO) for this case?
       * @example Yes
       */
      vloDiscussion?: string
      /**
       * Format: int64
       * @description The licence Id which this licence is a variation of
       */
      variationOf?: number
    } & {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      kind: 'VARIATION'
    }
    AddAnother: {
      label: string
    }
    AdditionalConditionAp: {
      code: string
      category: string
      text: string
      tpl?: string
      requiresInput: boolean
      inputs?: components['schemas']['Input'][]
      categoryShort?: string
      subtext?: string
      type?: string
      skippable?: boolean
    }
    AdditionalConditionPss: {
      code: string
      category: string
      text: string
      tpl?: string
      requiresInput: boolean
      categoryShort?: string
      pssDates?: boolean
      inputs?: components['schemas']['Input'][]
      type?: string
      skippable?: boolean
    }
    AdditionalConditions: {
      AP: components['schemas']['AdditionalConditionAp'][]
      PSS: components['schemas']['AdditionalConditionPss'][]
    }
    ChangeHint: {
      previousCode: string
      replacements: string[]
    }
    Conditional: {
      inputs: components['schemas']['ConditionalInput'][]
    }
    ConditionalInput: {
      /** @enum {string} */
      type: 'radio' | 'address' | 'timePicker' | 'datePicker' | 'fileUpload' | 'text' | 'check'
      label: string
      name: string
      /** @enum {string} */
      case?: 'lower' | 'upper' | 'capitalised'
      handleIndefiniteArticle?: boolean
      includeBefore?: string
      subtext?: string
    }
    Input: {
      /** @enum {string} */
      type: 'radio' | 'address' | 'timePicker' | 'datePicker' | 'fileUpload' | 'text' | 'check'
      label: string
      name: string
      listType?: string
      options?: components['schemas']['Option'][]
      /** @enum {string} */
      case?: 'lower' | 'upper' | 'capitalised'
      handleIndefiniteArticle?: boolean
      addAnother?: components['schemas']['AddAnother']
      includeBefore?: string
      subtext?: string
    }
    Option: {
      value: string
      conditional?: components['schemas']['Conditional']
    }
    StandardConditionAp: {
      /**
       * @description The unique code for this standard AP condition
       * @example 9ce9d594-e346-4785-9642-c87e764bee37
       */
      code: string
      /**
       * @description The text of this standard AP condition
       * @example Be of generally good behaviour
       */
      text: string
      tpl?: string
    }
    StandardConditionPss: {
      /**
       * @description The unique code for this standard PSS condition
       * @example 9ce9d594-e346-4785-9642-c87e764bee37
       */
      code: string
      /**
       * @description The text of this standard PSS condition
       * @example Be of generally good behaviour
       */
      text: string
      tpl?: string
    }
    StandardConditions: {
      AP: components['schemas']['StandardConditionAp'][]
      PSS: components['schemas']['StandardConditionPss'][]
    }
    LicenceConditionChanges: {
      /** @enum {string} */
      changeType: 'DELETED' | 'REPLACED' | 'REMOVED_NO_REPLACEMENTS' | 'NEW_OPTIONS' | 'TEXT_CHANGE'
      code: string
      /** Format: int32 */
      sequence?: number
      previousText: string
      currentText?: string
      suggestions: components['schemas']['SuggestedCondition'][]
    }
    SuggestedCondition: {
      code: string
      currentText: string
    }
    FirstNight: {
      /**
       * Format: HH:mm
       * @example 00:00
       */
      firstNightFrom: string
      /**
       * Format: HH:mm
       * @example 00:00
       */
      firstNightUntil: string
    }
    HdcLicenceData: {
      /** Format: int64 */
      licenceId?: number
      curfewAddress?: components['schemas']['HdcCurfewAddress']
      firstNightCurfewHours?: components['schemas']['FirstNight']
      curfewTimes?: components['schemas']['HdcCurfewTimes'][]
    }
    /** @description Describes an event that was related to a licence */
    LicenceEvent: {
      /**
       * Format: int64
       * @description The internal ID of the licence event
       * @example 1234
       */
      id: number
      /**
       * Format: int64
       * @description The internal ID of the licence that this event relates to
       * @example 1234
       */
      licenceId: number
      /**
       * @description The licence event type
       * @example LicenceEventType.VARIATION_SUBMITTED
       * @enum {string}
       */
      eventType:
        | 'CREATED'
        | 'SUBMITTED'
        | 'BACK_IN_PROGRESS'
        | 'APPROVED'
        | 'ACTIVATED'
        | 'SUPERSEDED'
        | 'HARD_STOP_CREATED'
        | 'HARD_STOP_SUBMITTED'
        | 'HARD_STOP_REVIEWED_WITHOUT_VARIATION'
        | 'HARD_STOP_REVIEWED_WITH_VARIATION'
        | 'VARIATION_CREATED'
        | 'VARIATION_SUBMITTED_REASON'
        | 'VARIATION_IN_PROGRESS'
        | 'VARIATION_SUBMITTED'
        | 'VARIATION_REFERRED'
        | 'VARIATION_APPROVED'
        | 'INACTIVE'
        | 'RECALLED'
        | 'VERSION_CREATED'
        | 'NOT_STARTED'
        | 'TIMED_OUT'
      /**
       * @description The username related to this event or SYSTEM if an automated event
       * @example X63533
       */
      username?: string
      /**
       * @description The forename of the person related to this event, or SYSTEM if an automated event.
       * @example Joe
       */
      forenames?: string
      /**
       * @description The surname of the person related to this event, or SYSTEM if an automated event.
       * @example Bloggs
       */
      surname?: string
      /**
       * @description A reason or description related to the event
       * @example Reason for variation
       */
      eventDescription?: string
      /**
       * Format: date-time
       * @description The date and time of the event
       * @example 12/01/2022 23:14:23
       */
      eventTime: string
    }
    DashboardDefinitionSummary: {
      id: string
      name: string
      description: string
    }
    ReportDefinitionSummary: {
      id: string
      name: string
      description?: string
      variants: components['schemas']['VariantDefinitionSummary'][]
      dashboards?: components['schemas']['DashboardDefinitionSummary'][]
      authorised: boolean
    }
    VariantDefinitionSummary: {
      id: string
      name: string
      description?: string
    }
    ChildVariantDefinition: {
      id: string
      name: string
      resourceName: string
      specification?: components['schemas']['Specification']
      joinFields: string[]
    }
    DynamicFilterOption: {
      /** Format: int32 */
      minimumLength?: number
    }
    FieldDefinition: {
      name: string
      display: string
      /** @enum {string} */
      wordWrap?: 'none' | 'normal' | 'break-words'
      filter?: components['schemas']['FilterDefinition']
      sortable: boolean
      defaultsort: boolean
      /** @enum {string} */
      type: 'boolean' | 'date' | 'double' | 'HTML' | 'long' | 'string' | 'time'
      mandatory: boolean
      visible: boolean
      calculated: boolean
      header: boolean
    }
    FilterDefinition: {
      /** @enum {string} */
      type: 'Radio' | 'Select' | 'multiselect' | 'daterange' | 'autocomplete' | 'text' | 'date' | 'granulardaterange'
      mandatory: boolean
      pattern?: string
      staticOptions?: components['schemas']['FilterOption'][]
      dynamicOptions?: components['schemas']['DynamicFilterOption']
      defaultValue?: string
      min?: string
      max?: string
      interactive?: boolean
      /** @enum {string} */
      defaultGranularity?: 'hourly' | 'daily' | 'weekly' | 'monthly' | 'quarterly' | 'annually'
      /** @enum {string} */
      defaultQuickFilterValue?:
        | 'today'
        | 'yesterday'
        | 'last-seven-days'
        | 'last-thirty-days'
        | 'last-month'
        | 'last-full-month'
        | 'last-ninety-days'
        | 'last-three-months'
        | 'last-full-three-months'
        | 'last-year'
        | 'last-full-year'
        | 'tomorrow'
        | 'next-seven-days'
        | 'next-thirty-days'
        | 'next-month'
        | 'next-full-month'
        | 'next-ninety-days'
        | 'next-three-months'
        | 'next-full-three-months'
        | 'next-year'
        | 'next-full-year'
    }
    FilterOption: {
      name: string
      display: string
    }
    ReportSummary: {
      id: string
      /** @enum {string} */
      template: 'table-header' | 'table-footer' | 'section-header' | 'section-footer' | 'page-header' | 'page-footer'
      fields: components['schemas']['SummaryField'][]
    }
    SingleVariantReportDefinition: {
      id: string
      name: string
      description?: string
      variant: components['schemas']['VariantDefinition']
    }
    Specification: {
      /** @enum {string} */
      template: 'list' | 'list-section' | 'list-tab' | 'summary' | 'summary-section' | 'parent-child'
      fields: components['schemas']['FieldDefinition'][]
      sections: string[]
    }
    SummaryField: {
      name: string
      display?: string
      /** @enum {string} */
      type?: 'boolean' | 'date' | 'double' | 'HTML' | 'long' | 'string' | 'time'
      header?: boolean
      mergeRows?: boolean
    }
    VariantDefinition: {
      id: string
      name: string
      resourceName: string
      description?: string
      specification?: components['schemas']['Specification']
      classification?: string
      printable?: boolean
      summaries?: components['schemas']['ReportSummary'][]
      interactive?: boolean
      childVariants?: components['schemas']['ChildVariantDefinition'][]
    }
    DashboardDefinition: {
      id: string
      name: string
      description: string
      sections: components['schemas']['DashboardSectionDefinition'][]
      filterFields?: components['schemas']['FieldDefinition'][]
    }
    DashboardSectionDefinition: {
      id: string
      display?: string
      description?: string
      visualisations: components['schemas']['DashboardVisualisationDefinition'][]
    }
    DashboardVisualisationColumnDefinition: {
      id: string
      display: string
      /** @enum {string} */
      aggregate?: 'sum' | 'average'
      /** @enum {string} */
      unit?: 'NUMBER' | 'PERCENTAGE'
      displayValue?: boolean
      axis?: string
    }
    DashboardVisualisationColumnsDefinition: {
      keys?: components['schemas']['DashboardVisualisationColumnDefinition'][]
      measures: components['schemas']['DashboardVisualisationColumnDefinition'][]
      filters?: components['schemas']['ValueVisualisationColumnDefinition'][]
      expectNulls: boolean
    }
    DashboardVisualisationDefinition: {
      id: string
      /** @enum {string} */
      type: 'list' | 'doughnut' | 'bar' | 'bar-timeseries' | 'line' | 'scorecard' | 'scorecard-group'
      display?: string
      description?: string
      columns: components['schemas']['DashboardVisualisationColumnsDefinition']
    }
    ValueVisualisationColumnDefinition: {
      id: string
      equals: string
    }
    /** @description Describes a prisoner due for release */
    Case: {
      /**
       * @description The full name of the prisoner
       * @example John Smith
       */
      name: string
      /**
       * @description The case reference number (CRN) for the person on this licence
       * @example X12444
       */
      crn: string
      /**
       * Format: date
       * @description The date on which the prisoner leaves custody
       * @example 30/11/2022
       */
      releaseDate: string
    }
    PromptComNotification: {
      email: string
      comName: string
      initialPromptCases: components['schemas']['Case'][]
      urgentPromptCases: components['schemas']['Case'][]
    }
    /** @description Describes the counts of cases needed for review by a Probation Practitioner */
    ComReviewCount: {
      /**
       * Format: int64
       * @description A count of cases that the probation practitioner needs to review
       * @example 42
       */
      myCount: number
      /** @description A list of teams, the probation practitioner is attached and the count of cases that need review */
      teams: components['schemas']['TeamCountsDto'][]
    }
    /** @description Describes a team and the respective count of their cases that need review */
    TeamCountsDto: {
      /**
       * @description The team code
       * @example ABC123
       */
      teamCode: string
      /**
       * Format: int64
       * @description A count of cases that need to be reviewed
       * @example 42
       */
      count: number
    }
    /** @description Response object which describes an result from a address search */
    AddressSearchResponse: {
      /**
       * @description The address's Unique Property Reference Number
       * @example 200010019924
       */
      reference: string
      /**
       * @description The address's first line
       * @example 34
       */
      firstLine: string
      /**
       * @description The address's second line
       * @example Urchfont
       */
      secondLine?: string
      /**
       * @description The address's Town or City
       * @example Chippenham
       */
      townOrCity: string
      /**
       * @description The address's county
       * @example Shropshire
       */
      county: string
      /**
       * @description The address's postcode
       * @example RG13HS
       */
      postcode: string
      /**
       * @description The address's country
       * @example Wales
       */
      country: string
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
type WithRequired<T, K extends keyof T> = T & {
  [P in K]-?: T[P]
}
