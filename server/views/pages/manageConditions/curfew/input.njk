{% extends "layout.njk" %}
{% from "govuk/components/details/macro.njk" import govukDetails %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "partials/timePicker.njk" import timePicker %}
{% from "formBuilder.njk" import formBuilder %}

{% set pageTitle = applicationName + " - Create a licence - Additional Conditions" %}
{% set pageId = "additional-condition-input-page" %}
{% set fromReview = "?fromReview=true" if fromReview %}
{% set fromReviewAppend = "&fromReview=true" if fromReview %}

{% set fromPolicyReviewQuery = "?fromPolicyReview=true" if fromPolicyReview %}
{% set fromPolicyReviewAppend = "&fromPolicyReview=true" if fromPolicyReview %}

{% if fromPolicyReview %}
  {% set backLinkHref = "/licence/vary/id/" + licence.id + "/policy-changes/input/callback/"+ (policyReview.policyChangeInputCounter - 1)%}
  {% set noJsBackLink = true%}
{% else %}
  {% set backLinkHref = "/licence/create/id/" + licence.id + "/additional-licence-conditions" %}
{% endif %}

{% block content %}
    {% if fromPolicyReview %}
        <span class="govuk-caption-l">Change {{policyReview.conditionCounter}} of {{policyReview.policyChangesCount}}</span>
    {% endif %}
    <div class="govuk-grid-row govuk-!-margin-bottom-6">
        <div class="govuk-grid-column-three-quarters">
            <h1 class="govuk-heading-l govuk-!-margin-bottom-0">Complete the licence condition</h1>
        </div>
    </div>
    
    <div class="govuk-button-group">
        <form method="POST"
            id="additionConditionInputs"
        >
            <input type="hidden" name="_csrf" value="{{ csrfToken }}">
            <input type="hidden" name="code" value="{{ config.code }}">

            <div class="govuk-grid-row">
                <div class="govuk-grid-column-two-thirds">
                    <p class="govuk-body">
                        {{ config.text }}
                    </p>
                    {% if config.subtext %}
                        <div class="govuk-hint">{{ config.subtext }}</div>
                    {% endif %}

                    {% macro renderTimePicker(id, labelText, formResponses) %}
                        {{ timePicker({
                            name: id,
                            id: id,
                            label: {
                            text: labelText,
                            classes: "govuk-!-font-weight-bold"
                            },
                            hint: {
                            text: "For example, 9:30am or 2:55pm"
                            },
                            errorMessage: validationErrors | findError(id),
                            formResponses: formResponses[id]
                        }) }}
                    {% endmacro %}

                    {% set options = [] %}
                    {% set options = [
                        {
                            text: "One curfew",
                            value: "One curfew",
                            checked: formResponses.numberOfCurfews == "One curfew",
                            conditional: {
                            html:
                                renderTimePicker("oneCurfewStart", "Enter the curfew start time", formResponses) +
                                renderTimePicker("oneCurfewEnd", "Enter the curfew end time", formResponses)
                            }
                        },
                        {
                            text: "Two curfews",
                            value: "Two curfews",
                            checked: formResponses.numberOfCurfews == "Two curfews",
                            conditional: {
                            html:
                                renderTimePicker("twoCurfewStart", "First curfew – enter the start time", formResponses) +
                                renderTimePicker("twoCurfewEnd", "First curfew – enter the end time", formResponses) +
                                renderTimePicker("twoCurfewStart2", "Second curfew – enter the start time", formResponses) +
                                renderTimePicker("twoCurfewEnd2", "Second curfew – enter the end time", formResponses)
                            }
                        },
                        {
                            text: "Three curfews",
                            value: "Three curfews",
                            checked: formResponses.numberOfCurfews == "Three curfews",
                            conditional: {
                            html:
                                renderTimePicker("threeCurfewStart", "First curfew – enter the start time", formResponses) +
                                renderTimePicker("threeCurfewEnd", "First curfew – enter the end time", formResponses) +
                                renderTimePicker("threeCurfewStart2", "Second curfew – enter the start time", formResponses) +
                                renderTimePicker("threeCurfewEnd2", "Second curfew – enter the end time", formResponses) +
                                renderTimePicker("threeCurfewStart3", "Third curfew – enter the start time", formResponses) +
                                renderTimePicker("threeCurfewEnd3", "Third curfew – enter the end time", formResponses)
                            }
                        }
                    ] %}

                    {{
                        govukRadios({
                            idPrefix: "numberOfCurfews",
                            name: "numberOfCurfews",
                            fieldset: {
                                legend: {
                                    text: "Select the number of curfews needed",
                                    classes: "govuk-fieldset__legend govuk-fieldset__legend--m radio-numberOfCurfews-legend"
                                }
                            },
                            items: options,
                            errorMessage: validationErrors | findError('numberOfCurfews')
                        })
                    }}

                    {% set reviewOptions = [
                        {
                            text: "Weekly",
                            value: "Weekly",
                            checked: formResponses.reviewPeriod == "Weekly"
                        },
                        {
                            text: "Monthly",
                            value: "Monthly",
                            checked: formResponses.reviewPeriod == "Monthly"
                        },
                        {
                            text: "Other",
                            value: "Other",
                            checked: formResponses.reviewPeriod == "Other",
                            conditional: {
                            html: govukInput({
                                id: "alternativeReviewPeriod",
                                name: "alternativeReviewPeriod",
                                label: {
                                text: "Enter a review period",
                                classes: "govuk-!-font-weight-bold"
                                },
                                classes: "govuk-input",
                                value: formResponses.alternativeReviewPeriod,
                                errorMessage: validationErrors.alternativeReviewPeriod
                            })
                            }
                        }
                        ] %}

                    {{ govukRadios({
                    idPrefix: "reviewPeriod",
                    name: "reviewPeriod",
                    fieldset: {
                        legend: {
                        text: "Select a review period",
                        classes: "govuk-fieldset__legend govuk-fieldset__legend--m"
                        }
                    },
                    items: reviewOptions,
                    errorMessage: validationErrors | findError('reviewPeriod')
                    }) }}


                    {# {{ formBuilder(licence.id, config, additionalCondition, validationErrors, formResponses, csrfToken) }} #}

                    <h2 class="govuk-heading-m govuk-!-margin-bottom-2">Help with this licence condition</h2>

                    {{ govukDetails({
                        summaryText: "If curfews are longer than 12 hours",
                        html: "You must use a bespoke licence condition approved by PPCS if: <ul class='govuk-list--bullet'><li>the total length of someone's curfews is more than 12 hours</li><li>they need more than 3 curfews</li></ul>",
                        classes: "govuk-!-margin-1"
                    }) }}

                    {{ govukDetails({
                        summaryText: "If you are also adding reporting instructions",
                        html: "Add an hour to the total length of someone's curfews each time you ask them to report to a police station or approved premises in an additional licence condition.</br></br>If this total is more than 12 hours, you must use a bespoke condition approved by PPCS.</br></br>For example, if someone had an 11-hour curfew and had to report to a police station twice a day, the total length of their curfews would be 13 hours. This would need PPCS approval.",
                        classes: "govuk-!-margin-1"
                    }) }}

                    <div class="govuk-button-group">
                        {{ govukButton({
                            text: "Continue",
                            type: "submit",
                            classes: 'govuk-!-margin-top-6',
                            attributes: { 'data-qa': 'continue' },
                            preventDoubleClick: true
                        }) }}
                        {{ govukButton({
                            text: "Delete this condition",
                            href: "/licence/create/id/" + licence.id + "/additional-licence-conditions/condition/code/" + additionalCondition.code + "/delete" + fromReview + fromPolicyReviewQuery,
                            classes: 'govuk-button--secondary',
                            attributes: { 'data-qa': 'delete' },
                            preventDoubleClick: true
                        }) }}
                    </div>
                </div>
            </div>
        </form>
    </div>
{% endblock %}

{% block pageScripts %}
    <script src="/assets/js/conditions/addAnother.js"></script>
{% endblock %}

