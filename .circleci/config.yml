version: 2.1
orbs:
  hmpps: ministryofjustice/hmpps@8
  codecov: codecov/codecov@3.2.5
parameters:
  alerts-slack-channel:
    type: string
    default: cvl_alerts_security
  releases-slack-channel:
    type: string
    default: the_elephants_devs
  node-version:
    type: string
    default: 20.11-browsers
executors:
  integration-tests:
    docker:
      - image: 'cimg/node:<<pipeline.parameters.node-version>>'
      - image: 'circleci/redis:buster'
      - image: 'localstack/localstack:latest'
        environment:
          PERSISTENCE: /tmp/localstack/data
          TMP_DIR: /private
    working_directory: ~/app
    resource_class: medium
jobs:
  build:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@10'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci --no-audit
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - ~/.cache
      - run:
          command: |
            npm run build
            DATE=$(date '+%Y-%m-%d')
            export BUILD_NUMBER=${DATE}.${CIRCLE_BUILD_NUM}
            export GIT_REF="$CIRCLE_SHA1"
      - run: # Run linter after build because the integration test code depend on compiled typescript...
          name: Linter check
          command: npm run lint
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - assets/stylesheets
            - build
            - dist
  unit_test:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: unit tests
          command: npm run test:ci
      - codecov/upload:
          file: coverage/coverage-final.json
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test_results/unit-test-reports.html
  integration_test:
    executor: integration-tests
    steps:
      - hmpps/install_aws_cli
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Install missing OS dependency
          command: sudo apt-get install libxss1
      - run:
          name: Wait for localstack to start before creating resources
          command: sleep 10
      - run:
          name: Create localstack queues
          command: |
            export AWS_DEFAULT_REGION=eu-west-2
            export AWS_ACCESS_KEY_ID=foo
            export AWS_SECRET_ACCESS_KEY=bar

            aws --endpoint-url=http://localhost:4566 sqs create-queue --queue-name create_and_vary_a_licence_prison_events_queue
            aws --endpoint-url=http://localhost:4566 sqs create-queue --queue-name create_and_vary_a_licence_prison_events_queue_dl
            aws --endpoint-url=http://localhost:4566 sqs set-queue-attributes --queue-url "http://localhost:4566/000000000000/create_and_vary_a_licence_prison_events_queue" --attributes '{"RedrivePolicy":"{\"maxReceiveCount\":\"3\", \"deadLetterTargetArn\":\"arn:aws:sqs:eu-west-2:000000000000:create_and_vary_a_licence_prison_events_queue_dl\"}"}'

            aws --endpoint-url=http://localhost:4566 sqs create-queue --queue-name create_and_vary_a_licence_probation_events_queue
            aws --endpoint-url=http://localhost:4566 sqs create-queue --queue-name create_and_vary_a_licence_probation_events_queue_dl
            aws --endpoint-url=http://localhost:4566 sqs set-queue-attributes --queue-url "http://localhost:4566/000000000000/create_and_vary_a_licence_probation_events_queue" --attributes '{"RedrivePolicy":"{\"maxReceiveCount\":\"3\", \"deadLetterTargetArn\":\"arn:aws:sqs:eu-west-2:000000000000:create_and_vary_a_licence_probation_events_queue_dl\"}"}'

            aws --endpoint-url=http://localhost:4566 sqs create-queue --queue-name create_and_vary_a_licence_domain_events_queue
            aws --endpoint-url=http://localhost:4566 sqs create-queue --queue-name create_and_vary_a_licence_domain_events_queue_dl
            aws --endpoint-url=http://localhost:4566 sqs set-queue-attributes --queue-url "http://localhost:4566/000000000000/create_and_vary_a_licence_domain_events_queue" --attributes '{"RedrivePolicy":"{\"maxReceiveCount\":\"3\", \"deadLetterTargetArn\":\"arn:aws:sqs:eu-west-2:000000000000:create_and_vary_a_licence_domain_events_queue_dl\"}"}'
      - run:
          name: Get wiremock
          command: curl -o wiremock.jar https://repo1.maven.org/maven2/org/wiremock/wiremock-standalone/3.3.1/wiremock-standalone-3.3.1.jar
      - run:
          name: Run wiremock
          command: java -jar wiremock.jar --port 9091
          background: true
      - run:
          name: Run the node app.
          command: npm run start-feature
          background: true
      - run:
          name: Wait for node app to start
          command: sleep 5
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: integration tests
          command: npm run int-test
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: integration_tests/videos
      - store_artifacts:
          path: integration_tests/screenshots
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
        filters:
          tags:
            ignore: /.*/
      - unit_test:
          requires:
            - build
      - integration_test:
          requires:
            - build
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
                - /test.*/
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - helm_lint
            - unit_test
            - integration_test
            - build_docker
      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          context:
            - hmpps-common-vars
            - create-and-vary-a-licence-preprod
          requires:
            - request-preprod-approval
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
          context:
            - hmpps-common-vars
            - create-and-vary-a-licence-prod
          requires:
            - request-prod-approval
      - hmpps/deploy_env:
          name: deploy_test1
          env: "test1"
          context:
            - hmpps-common-vars
            - create-and-vary-a-licence-test1
          requires:
            - build_docker
          filters:
            branches:
              only:
                - test1
      - hmpps/deploy_env:
          name: deploy_test2
          env: "test2"
          context:
            - hmpps-common-vars
            - create-and-vary-a-licence-test2
          requires:
            - build_docker
          filters:
            branches:
              only:
                - main
